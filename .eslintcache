[{"D:\\mywork\\vite-react-template-typescript-master\\src\\App.tsx":"1","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\AuthorizedButton.tsx":"2","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\checkPermissions.tsx":"3","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\index.tsx":"4","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\PromiseRender.tsx":"5","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Icon\\index.tsx":"6","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\IconSelect.tsx":"7","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\index.ts":"8","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\utils.ts":"9","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-en.ts":"10","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-zh-cn.ts":"11","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\index.tsx":"12","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\index.ts":"13","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\PopoverMenu.tsx":"14","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Spinner\\index.tsx":"15","D:\\mywork\\vite-react-template-typescript-master\\src\\config.ts":"16","D:\\mywork\\vite-react-template-typescript-master\\src\\hooks\\useDebounce.tsx":"17","D:\\mywork\\vite-react-template-typescript-master\\src\\main.tsx":"18","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\home\\index.tsx":"19","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\index.tsx":"20","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\privateRouter.tsx":"21","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\routerConfig.tsx":"22","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\index.tsx":"23","D:\\mywork\\vite-react-template-typescript-master\\src\\services\\login.ts":"24","D:\\mywork\\vite-react-template-typescript-master\\src\\utils\\reuqest.ts":"25","D:\\mywork\\vite-react-template-typescript-master\\src\\vite-env.d.ts":"26","D:\\work\\react-vite-ts\\src\\App.tsx":"27","D:\\work\\react-vite-ts\\src\\components\\Authorized\\AuthorizedButton.tsx":"28","D:\\work\\react-vite-ts\\src\\components\\Authorized\\checkPermissions.tsx":"29","D:\\work\\react-vite-ts\\src\\components\\Authorized\\index.tsx":"30","D:\\work\\react-vite-ts\\src\\components\\Authorized\\PromiseRender.tsx":"31","D:\\work\\react-vite-ts\\src\\components\\Icon\\index.tsx":"32","D:\\work\\react-vite-ts\\src\\components\\IconSelect\\IconSelect.tsx":"33","D:\\work\\react-vite-ts\\src\\components\\IconSelect\\index.ts":"34","D:\\work\\react-vite-ts\\src\\components\\IconSelect\\utils.ts":"35","D:\\work\\react-vite-ts\\src\\components\\locales\\components\\ln-en.ts":"36","D:\\work\\react-vite-ts\\src\\components\\locales\\components\\ln-zh-cn.ts":"37","D:\\work\\react-vite-ts\\src\\components\\locales\\index.tsx":"38","D:\\work\\react-vite-ts\\src\\components\\PopoverMenu\\index.ts":"39","D:\\work\\react-vite-ts\\src\\components\\PopoverMenu\\PopoverMenu.tsx":"40","D:\\work\\react-vite-ts\\src\\components\\Spinner\\index.tsx":"41","D:\\work\\react-vite-ts\\src\\config.ts":"42","D:\\work\\react-vite-ts\\src\\hooks\\useDebounce.tsx":"43","D:\\work\\react-vite-ts\\src\\main.tsx":"44","D:\\work\\react-vite-ts\\src\\pages\\home\\index.tsx":"45","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\CountDown.tsx":"46","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginContent.tsx":"47","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginMessage.tsx":"48","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginPassword.tsx":"49","D:\\work\\react-vite-ts\\src\\pages\\login\\index.tsx":"50","D:\\work\\react-vite-ts\\src\\pages\\todoList\\index.tsx":"51","D:\\work\\react-vite-ts\\src\\router\\index.tsx":"52","D:\\work\\react-vite-ts\\src\\services\\login.ts":"53","D:\\work\\react-vite-ts\\src\\utils\\reuqest.ts":"54","D:\\work\\react-vite-ts\\src\\vite-env.d.ts":"55"},{"size":643,"mtime":1642669912203,"results":"56","hashOfConfig":"57"},{"size":972,"mtime":1629878392000,"results":"58","hashOfConfig":"57"},{"size":1860,"mtime":1629878392000,"results":"59","hashOfConfig":"57"},{"size":81,"mtime":1629878392000,"results":"60","hashOfConfig":"57"},{"size":2409,"mtime":1629878392000,"results":"61","hashOfConfig":"57"},{"size":992,"mtime":1629878392000,"results":"62","hashOfConfig":"57"},{"size":1988,"mtime":1629878392000,"results":"63","hashOfConfig":"57"},{"size":67,"mtime":1629878392000,"results":"64","hashOfConfig":"57"},{"size":169,"mtime":1629878392000,"results":"65","hashOfConfig":"57"},{"size":239,"mtime":1629878392000,"results":"66","hashOfConfig":"57"},{"size":189,"mtime":1629878392000,"results":"67","hashOfConfig":"57"},{"size":3550,"mtime":1629878392000,"results":"68","hashOfConfig":"57"},{"size":102,"mtime":1629878392000,"results":"69","hashOfConfig":"57"},{"size":1505,"mtime":1629878392000,"results":"70","hashOfConfig":"57"},{"size":664,"mtime":1629878392000,"results":"71","hashOfConfig":"57"},{"size":567,"mtime":1629878392000,"results":"72","hashOfConfig":"57"},{"size":402,"mtime":1629878392000,"results":"73","hashOfConfig":"57"},{"size":226,"mtime":1629878392000,"results":"74","hashOfConfig":"57"},{"size":2734,"mtime":1629878392000,"results":"75","hashOfConfig":"57"},{"size":914,"mtime":1629878392000,"results":"76","hashOfConfig":"57"},{"size":618,"mtime":1629878392000,"results":"77","hashOfConfig":"57"},{"size":232,"mtime":1629878392000,"results":"78","hashOfConfig":"57"},{"size":1652,"mtime":1629878392000,"results":"79","hashOfConfig":"57"},{"size":502,"mtime":1629878392000,"results":"80","hashOfConfig":"57"},{"size":324,"mtime":1629878392000,"results":"81","hashOfConfig":"57"},{"size":38,"mtime":1629878392000,"results":"82","hashOfConfig":"57"},{"size":669,"mtime":1657516542282,"results":"83","hashOfConfig":"84"},{"size":1010,"mtime":1657516542284,"results":"85","hashOfConfig":"84"},{"size":1936,"mtime":1657516542284,"results":"86","hashOfConfig":"84"},{"size":84,"mtime":1657516542285,"results":"87","hashOfConfig":"84"},{"size":2497,"mtime":1657516542284,"results":"88","hashOfConfig":"84"},{"size":1033,"mtime":1657516542286,"results":"89","hashOfConfig":"84"},{"size":2065,"mtime":1657516542287,"results":"90","hashOfConfig":"84"},{"size":70,"mtime":1657516542287,"results":"91","hashOfConfig":"84"},{"size":184,"mtime":1657516542287,"results":"92","hashOfConfig":"84"},{"size":246,"mtime":1657516542289,"results":"93","hashOfConfig":"84"},{"size":196,"mtime":1657516542289,"results":"94","hashOfConfig":"84"},{"size":3703,"mtime":1657516542290,"results":"95","hashOfConfig":"84"},{"size":107,"mtime":1657516542288,"results":"96","hashOfConfig":"84"},{"size":1577,"mtime":1657516542288,"results":"97","hashOfConfig":"84"},{"size":694,"mtime":1657516542289,"results":"98","hashOfConfig":"84"},{"size":589,"mtime":1657516542290,"results":"99","hashOfConfig":"84"},{"size":417,"mtime":1657516542291,"results":"100","hashOfConfig":"84"},{"size":237,"mtime":1656494045181,"results":"101","hashOfConfig":"84"},{"size":139,"mtime":1657516542292,"results":"102","hashOfConfig":"84"},{"size":4333,"mtime":1657516542292,"results":"103","hashOfConfig":"84"},{"size":708,"mtime":1657516542292,"results":"104","hashOfConfig":"84"},{"size":2038,"mtime":1657516542293,"results":"105","hashOfConfig":"84"},{"size":2508,"mtime":1657516542293,"results":"106","hashOfConfig":"84"},{"size":948,"mtime":1657516542295,"results":"107","hashOfConfig":"84"},{"size":3690,"mtime":1657698818739,"results":"108","hashOfConfig":"84"},{"size":802,"mtime":1657698818740,"results":"109","hashOfConfig":"84"},{"size":530,"mtime":1657516542298,"results":"110","hashOfConfig":"84"},{"size":337,"mtime":1657516542299,"results":"111","hashOfConfig":"84"},{"size":39,"mtime":1656494045185,"results":"112","hashOfConfig":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},"1kycmhh",{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177"},"ll233z",{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\mywork\\vite-react-template-typescript-master\\src\\App.tsx",["246","247"],"import React, { useState } from \"react\";\nimport ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/dist/antd.less\";\nimport style from \"./App.module.less\";\nimport RouterPage from \"./router\";\nimport { getLocale, localeInfo, LocaleProvider } from \"./components/locales\";\n\n/**\n * 入口\n * @constructor\n */\nfunction App() {\n  return (\n    <div className={style.App}>\n      <header className={style.AppHeader}>\n        <LocaleProvider>\n          <ConfigProvider locale={localeInfo[getLocale()]?.antd}>\n            <RouterPage />\n          </ConfigProvider>\n        </LocaleProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\AuthorizedButton.tsx",["248"],"import React, { useEffect, useState } from \"react\";\nimport type { IAuthorityType } from \"./checkPermissions\";\nimport checkPermissions from \"./checkPermissions\";\n\ninterface AuthorizedProps {\n  // 权限判定\n  authority: IAuthorityType;\n  // render\n  render?: () => React.ReactNode;\n  // 未匹配结果\n  noMatch?: React.ReactNode;\n  // children\n  children?: React.ReactNode;\n}\n\n/**\n * 按钮权限判定\n */\nfunction AuthorizedButton({\n  children,\n  authority,\n  render,\n  noMatch,\n}: AuthorizedProps) {\n  // 目前是写死的按钮权限，真实场景应该会有配置页面，通过接口返回对应权限，然后放到permission中\n  const [permissions] = useState<string[]>([\"button\", \"button1\", \"button2\"]);\n\n  const result = checkPermissions(\n    authority,\n    // state?.userInfo!.userResourceMap[state.enterpriseId],\n    permissions,\n    render ? render() : children,\n    noMatch\n  );\n  return <>{result}</>;\n}\n\nexport default React.memo(AuthorizedButton);\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\checkPermissions.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\PromiseRender.tsx",["249","250","251","252","253","254","255","256","257"],"import React from \"react\";\nimport { isEqual } from \"lodash\";\nimport Spinner from \"@/components/Spinner\";\n\nexport const isComponentClass = (\n  component: React.ComponentClass | React.ReactNode\n): boolean => {\n  if (!component) return false;\n  const proto = Object.getPrototypeOf(component);\n  if (proto === React.Component || proto === Function.prototype) return true;\n  return isComponentClass(proto);\n};\n\ninterface PromiseRenderProps<T, K> {\n  ok: T;\n  error: K;\n  promise: Promise<boolean>;\n}\n\ninterface PromiseRenderState {\n  component: React.ComponentClass | React.FunctionComponent;\n}\n\nexport default class PromiseRender<T, K> extends React.Component<\n  PromiseRenderProps<T, K>,\n  PromiseRenderState\n> {\n  state: PromiseRenderState = {\n    component: () => null,\n  };\n\n  componentDidMount() {\n    this.setRenderComponent(this.props);\n  }\n\n  shouldComponentUpdate = (\n    nextProps: PromiseRenderProps<T, K>,\n    nextState: PromiseRenderState\n  ) => {\n    const { component } = this.state;\n    if (!isEqual(nextProps, this.props)) {\n      this.setRenderComponent(nextProps);\n    }\n    return nextState.component !== component;\n  };\n\n  // set render Component : ok or error\n  setRenderComponent(props: PromiseRenderProps<T, K>) {\n    const ok = this.checkIsInstantiation(props.ok);\n    const error = this.checkIsInstantiation(props.error);\n    props.promise\n      .then(() => {\n        this.setState({\n          component: ok,\n        });\n        return true;\n      })\n      .catch(() => {\n        this.setState({\n          component: error,\n        });\n      });\n  }\n\n  // Determine whether the incoming component has been instantiated\n  // AuthorizedRoute is already instantiated\n  // Authorized  render is already instantiated, children is no instantiated\n  // Secured is not instantiated\n  checkIsInstantiation = (\n    target: React.ReactNode | React.ComponentClass\n  ): React.FunctionComponent => {\n    if (isComponentClass(target)) {\n      const Target = target as React.ComponentClass;\n      return (props: any) => <Target {...props} />;\n    }\n    if (React.isValidElement(target)) {\n      return (props: any) => React.cloneElement(target, props);\n    }\n    return () => target as React.ReactNode & null;\n  };\n\n  render() {\n    const { component: Component } = this.state;\n    const { ok, error, promise, ...rest } = this.props;\n\n    return Component ? <Component {...rest} /> : <Spinner />;\n  }\n}\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Icon\\index.tsx",["258"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { createFromIconfontCN } from \"@ant-design/icons\";\nimport styles from \"./Icon.module.less\";\n\nexport interface IconType extends React.HTMLAttributes<any> {\n  type: string;\n  // 图标尺寸，默认 normal\n  size?: \"small\" | \"normal\" | \"large\" | null;\n  // 是否禁用\n  disabled?: boolean;\n}\n\nconst FontIcon = createFromIconfontCN({\n  // 请给新图标一个合适的驼峰命名，并保证单词正确\n  scriptUrl: \"//at.alicdn.com/t/font_2742219_5q5w02ov9d4.js\",\n});\n\nconst Icon: React.FC<IconType> = ({\n  className,\n  size = \"normal\",\n  disabled,\n  ...restProps\n}) => {\n  return (\n    <FontIcon\n      className={classNames(\n        {\n          [styles.large]: size === \"large\",\n          [styles.normal]: size === \"normal\",\n          [styles.small]: size === \"small\",\n          [styles.disabled]: disabled,\n        },\n        className\n      )}\n      {...restProps}\n    />\n  );\n};\n\nexport default React.memo(Icon);\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\IconSelect.tsx",["259","260","261"],"import React from \"react\";\nimport { Input } from \"antd\";\nimport classNames from \"classnames\";\nimport { InputProps } from \"antd/es/input\";\nimport Icon from \"../Icon\";\nimport PopoverMenu from \"../PopoverMenu\";\nimport { iconList } from \"./utils\";\nimport styles from \"./IconSelect.module.less\";\n\n// Omit表示忽略掉InputProps接口中的value,onChange,readOnly属性\n// https://juejin.cn/post/6893071406481801224#heading-14\nexport interface IconSelectProps\n  extends Omit<InputProps, \"value\" | \"onChange\" | \"readOnly\"> {\n  // 受控属性\n  value?: string;\n  // 受控属性\n  onChange?: (value: any) => void;\n  // 容器位置\n  getPopupContainer?: (props: any) => HTMLElement;\n}\n\n/**\n * 图标选择表单\n */\nfunction IconSelect({\n  value,\n  onChange,\n  disabled,\n  getPopupContainer,\n  ...props\n}: IconSelectProps) {\n  const [visible, setVisible] = React.useState(false);\n\n  function handleSelectIcon(item: string) {\n    if (onChange) {\n      onChange(item);\n    }\n    setVisible(false);\n  }\n\n  return (\n    <PopoverMenu\n      trigger={[\"click\"]}\n      visible={visible}\n      onVisibleChange={!disabled ? setVisible : undefined}\n      placement=\"bottomLeft\"\n      getPopupContainer={getPopupContainer}\n      content={\n        <div className={styles.selectWrap}>\n          {iconList.map((item) => (\n            <Icon\n              key={item}\n              className={classNames(styles.iconItem, {\n                [styles.active]: value === item,\n              })}\n              type={`icon-${item}`}\n              onClick={() => handleSelectIcon(item)}\n            />\n          ))}\n        </div>\n      }\n    >\n      <Input\n        placeholder={value ? undefined : \"请选择\"}\n        suffix={<Icon className={styles.filterIcon} type=\"icon-down\" />}\n        prefix={\n          value && <Icon className={styles.iconValue} type={`icon-${value}`} />\n        }\n        disabled={disabled}\n        readOnly\n        {...props}\n      />\n    </PopoverMenu>\n  );\n}\n\nexport default IconSelect;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\index.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\utils.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-en.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-zh-cn.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\index.tsx",["262","263","264","265","266","267","268","269"],"import React from \"react\";\nimport type { IntlShape } from \"react-intl\";\nimport { createIntl, IntlProvider } from \"react-intl\";\n// 我们需要引入antd 的国际化的配置\nimport antdEnUS from \"antd/lib/locale/en_US\";\nimport antdZhCN from \"antd/lib/locale/zh_CN\";\n// 这是我们项目中中英文的配置，\nimport enLn from \"./components/ln-en\";\nimport zhLn from \"./components/ln-zh-cn\";\n\nlet gIntl: IntlShape;\n// 默认语言\nlet defaultLanguage = \"zh-cn\";\n// 当前使用的语言\nconst currentLocalName = localStorage.getItem(\"why__locale\") || defaultLanguage;\n\n// 本地未存储语言配置，默认添加一个\nif (!localStorage.getItem(\"why__locale\")) {\n  localStorage.setItem(\"why__locale\", defaultLanguage);\n}\n\n/**\n * 本地默认的语言配置\n */\nexport const localeInfo: Record<string, any> = {\n  en: {\n    messages: enLn,\n    locale: \"en\",\n    antd: antdEnUS,\n    momentLocale: \"\",\n  },\n  \"zh-cn\": {\n    messages: zhLn,\n    locale: \"zh-cn\",\n    antd: antdZhCN,\n    momentLocale: \"zh-cn\",\n  },\n};\n\n// 当前使用的localeInfo\nconst currentLocaleInfo = localeInfo[defaultLanguage];\n/**\n * 设置默认语言\n * @param lang\n */\nfunction setDefaultLanguage(lang: string) {\n  defaultLanguage = lang;\n}\n\n/**\n * 包裹了默认 locale 的 Provider\n * LocaleProvider 需要在App.tx使用，包装整个项目\n * @param props\n * @returns\n */\nexport const LocaleProvider: React.FC = (props) => {\n  return <IntlProvider locale={getLocale()}>{props.children}</IntlProvider>;\n};\n\n/**\n * 获取当前的 intl 对象，可以在 node 中使用\n * @param locale 需要切换的语言类型\n * @param changeIntl 是否不使用 g_intl\n * @returns IntlShape\n */\nconst getIntl = (locale?: string, changeIntl?: boolean) => {\n  // 如果全局的 g_intl 存在，且不是 setIntl 调用\n  if (gIntl && !changeIntl && !locale) {\n    return gIntl;\n  }\n  // 如果存在于 localeInfo 中\n  if (locale && localeInfo[locale]) {\n    return createIntl(localeInfo[locale]);\n  }\n\n  // 使用默认语言\n  if (localeInfo[defaultLanguage])\n    return createIntl(localeInfo[defaultLanguage]);\n  // 使用 zh-CN\n  if (localeInfo[\"zh-cn\"]) return createIntl(localeInfo[\"zh-cn\"]);\n  // 抛错\n  if (!locale || !!localeInfo[locale]) {\n    throw new Error(\n      \"The current popular language does not exist, please check the locales folder!\"\n    );\n  }\n  // 如果还没有，返回一个空的\n  return createIntl({\n    locale: \"zh-cn\",\n    messages: {},\n  });\n};\n\n/**\n * 切换全局的 intl 的设置\n * @param locale 语言的 key\n */\nconst setIntl = (locale: string) => {\n  gIntl = getIntl(locale, true);\n};\n\n/**\n * 获取当前选择的语言\n * @returns string\n */\nexport function getLocale() {\n  return currentLocalName;\n}\n\n/**\n * 切换语言\n * @param lang 语言的 key\n * @returns string\n */\nexport const setLocale = (lang: string) => {\n  // if (getStorageLocale() !== lang) {\n  if (typeof window.localStorage !== \"undefined\") {\n    window.localStorage.setItem(\"why__locale\", lang || \"\");\n  }\n  window.location.reload();\n  // }\n};\n\ninterface MessageDescriptor {\n  id?: string;\n  description?: string | any;\n  defaultMessage?: string;\n}\n\n/**\n * 语言转换\n * @param descriptor\n * @param values\n */\nexport const formatMessage = (\n  descriptor: MessageDescriptor,\n  values?: Record<string, any>\n) => {\n  if (!gIntl) {\n    setIntl(getLocale());\n  }\n  return gIntl.formatMessage(descriptor, values);\n};\n\n/**\n * 获取当前使用的语言信息\n * @returns\n */\nexport const getLocaleInfo = () => {\n  return currentLocaleInfo;\n};\n\nexport { createIntl };\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\index.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\PopoverMenu.tsx",["270","271","272","273"],"import React from \"react\";\nimport { Popover } from \"antd\";\nimport { useActivate, useUnactivate } from \"react-activation\";\nimport classNames from \"classnames\";\nimport { PopoverProps } from \"antd/es/popover\";\nimport styles from \"./PopoverMenu.module.less\";\n\nexport interface PopoverMenuProps\n  extends Omit<PopoverProps, \"overlayClassName\" | \"overlay\"> {\n  zIndex?: number;\n  content: React.ReactNode;\n}\n\n/**\n * 具有选项条的 Popover\n */\nfunction PopoverMenu({ zIndex, content, ...props }: PopoverMenuProps) {\n  const [canRender, setCanRender] = React.useState(true);\n\n  useActivate(() => {\n    setCanRender(true);\n  });\n\n  useUnactivate(() => {\n    setCanRender(false);\n  });\n\n  if (!canRender) {\n    return null;\n  }\n\n  return (\n    <Popover\n      getPopupContainer={(triggerNode) => triggerNode.parentNode as HTMLElement}\n      overlayClassName={styles.menuContent}\n      overlayStyle={{ zIndex }}\n      {...props}\n      content={<ul className={styles.menuList}>{content}</ul>}\n    />\n  );\n}\n\nexport interface PopoverMenuItemProps extends React.LiHTMLAttributes<any> {\n  disabled?: boolean;\n  children?: React.ReactNode;\n}\n\n/**\n * PopoverMenu 单条\n */\nexport function PopoverMenuItem({\n  disabled,\n  title,\n  children,\n  className,\n  ...props\n}: PopoverMenuItemProps) {\n  return (\n    <li\n      className={classNames(\n        styles.menuItem,\n        { [styles.disabled]: disabled },\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </li>\n  );\n}\n\nexport default PopoverMenu;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Spinner\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\config.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\hooks\\useDebounce.tsx",["274","275","276"],"import { useState, useEffect } from \"react\";\n\nfunction useDebounce(value: any, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = window.setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\nexport default useDebounce;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\main.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\home\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\index.tsx",["277","278"],"import React from \"react\";\nimport { useLocalStorageState } from \"ahooks\";\nimport LoginPassword from \"./components/LoginPassword\";\nimport LoginMessage from \"./components/LoginMessage\";\nimport styles from \"./index.module.less\";\n\nconst LoginPage: React.FC = () => {\n  const [loginWay, setLoginWay] = useLocalStorageState(\"login__Login__way\", \"\");\n  const [way, setWay] = React.useState<string>(loginWay);\n\n  /**\n   * 更新登录方式\n   * @param name\n   */\n  function updateWay(name: string) {\n    setWay(name);\n    setLoginWay(name);\n  }\n\n  return (\n    <div className={styles.loginContainer}>\n      <div className={styles.loginLogo} />\n      <div className={styles.loginForm}>\n        {/*{way === \"message\" ? (*/}\n        {/*  <LoginMessage updateWay={updateWay} />*/}\n        {/*) : (*/}\n        <LoginPassword updateWay={updateWay} />\n        {/*)}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\privateRouter.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\routerConfig.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\router\\index.tsx",["279"],"import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"@/pages/home\";\nimport LoginPage from \"@/pages/login\";\nimport DocPage from \"@/pages/doc\";\nimport PublicPage from \"@/pages/publicComponents\";\nimport CustomPage from \"@/pages/customHooks\";\nimport LocalePage from \"@/pages/locales\";\nimport IconPage from \"@/pages/icon\";\nimport TableList from \"@/pages/table\";\nimport TableEdit from \"@/pages/table/edit\";\nimport TableDrag from \"@/pages/table/drag\";\nimport PrivateRoute from \"./components/privateRouter\";\nimport AuthPage from \"@/pages/auth\";\n\nconst RouterPage = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={\"/login\"} component={LoginPage} />\n        <Route\n          path=\"/\"\n          render={() => (\n            <HomePage>\n              <Switch>\n                <PrivateRoute path=\"/doc\" component={DocPage} />\n                <PrivateRoute path=\"/home\" component={PublicPage} />\n                <PrivateRoute path=\"/custom\" component={CustomPage} />\n                <PrivateRoute path=\"/locale\" component={LocalePage} />\n                <PrivateRoute path=\"/icon\" component={IconPage} />\n                <PrivateRoute path=\"/table/base\" component={TableList} />\n                <PrivateRoute path=\"/table/edit\" component={TableEdit} />\n                <PrivateRoute path=\"/table/drag\" component={TableDrag} />\n                <PrivateRoute path=\"/auth\" component={AuthPage} />\n                <Redirect to=\"/home\" />\n              </Switch>\n            </HomePage>\n          )}\n        />\n      </Switch>\n    </HashRouter>\n  );\n};\nexport default RouterPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\services\\login.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\utils\\reuqest.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\vite-env.d.ts",[],"D:\\work\\react-vite-ts\\src\\App.tsx",["280","281"],"import React, { useState } from \"react\";\r\nimport ConfigProvider from \"antd/lib/config-provider\";\r\nimport \"antd/dist/antd.less\";\r\nimport style from \"./App.module.less\";\r\nimport RouterPage from \"./router\";\r\nimport { getLocale, localeInfo, LocaleProvider } from \"./components/locales\";\r\n\r\n/**\r\n * 入口\r\n * @constructor\r\n */\r\nfunction App() {\r\n  return (\r\n    <div className={style.App}>\r\n      <header className={style.AppHeader}>\r\n        <LocaleProvider>\r\n          <ConfigProvider locale={localeInfo[getLocale()]?.antd}>\r\n            <RouterPage />\r\n          </ConfigProvider>\r\n        </LocaleProvider>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\work\\react-vite-ts\\src\\components\\Authorized\\AuthorizedButton.tsx",["282"],"import React, { useEffect, useState } from \"react\";\r\nimport type { IAuthorityType } from \"./checkPermissions\";\r\nimport checkPermissions from \"./checkPermissions\";\r\n\r\ninterface AuthorizedProps {\r\n  // 权限判定\r\n  authority: IAuthorityType;\r\n  // render\r\n  render?: () => React.ReactNode;\r\n  // 未匹配结果\r\n  noMatch?: React.ReactNode;\r\n  // children\r\n  children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * 按钮权限判定\r\n */\r\nfunction AuthorizedButton({\r\n  children,\r\n  authority,\r\n  render,\r\n  noMatch,\r\n}: AuthorizedProps) {\r\n  // 目前是写死的按钮权限，真实场景应该会有配置页面，通过接口返回对应权限，然后放到permission中\r\n  const [permissions] = useState<string[]>([\"button\", \"button1\", \"button2\"]);\r\n\r\n  const result = checkPermissions(\r\n    authority,\r\n    // state?.userInfo!.userResourceMap[state.enterpriseId],\r\n    permissions,\r\n    render ? render() : children,\r\n    noMatch\r\n  );\r\n  return <>{result}</>;\r\n}\r\n\r\nexport default React.memo(AuthorizedButton);\r\n","D:\\work\\react-vite-ts\\src\\components\\Authorized\\checkPermissions.tsx",[],"D:\\work\\react-vite-ts\\src\\components\\Authorized\\index.tsx",[],"D:\\work\\react-vite-ts\\src\\components\\Authorized\\PromiseRender.tsx",["283","284","285","286","287","288","289","290","291"],"import React from \"react\";\r\nimport { isEqual } from \"lodash\";\r\nimport Spinner from \"@/components/Spinner\";\r\n\r\nexport const isComponentClass = (\r\n  component: React.ComponentClass | React.ReactNode\r\n): boolean => {\r\n  if (!component) return false;\r\n  const proto = Object.getPrototypeOf(component);\r\n  if (proto === React.Component || proto === Function.prototype) return true;\r\n  return isComponentClass(proto);\r\n};\r\n\r\ninterface PromiseRenderProps<T, K> {\r\n  ok: T;\r\n  error: K;\r\n  promise: Promise<boolean>;\r\n}\r\n\r\ninterface PromiseRenderState {\r\n  component: React.ComponentClass | React.FunctionComponent;\r\n}\r\n\r\nexport default class PromiseRender<T, K> extends React.Component<\r\n  PromiseRenderProps<T, K>,\r\n  PromiseRenderState\r\n> {\r\n  state: PromiseRenderState = {\r\n    component: () => null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setRenderComponent(this.props);\r\n  }\r\n\r\n  shouldComponentUpdate = (\r\n    nextProps: PromiseRenderProps<T, K>,\r\n    nextState: PromiseRenderState\r\n  ) => {\r\n    const { component } = this.state;\r\n    if (!isEqual(nextProps, this.props)) {\r\n      this.setRenderComponent(nextProps);\r\n    }\r\n    return nextState.component !== component;\r\n  };\r\n\r\n  // set render Component : ok or error\r\n  setRenderComponent(props: PromiseRenderProps<T, K>) {\r\n    const ok = this.checkIsInstantiation(props.ok);\r\n    const error = this.checkIsInstantiation(props.error);\r\n    props.promise\r\n      .then(() => {\r\n        this.setState({\r\n          component: ok,\r\n        });\r\n        return true;\r\n      })\r\n      .catch(() => {\r\n        this.setState({\r\n          component: error,\r\n        });\r\n      });\r\n  }\r\n\r\n  // Determine whether the incoming component has been instantiated\r\n  // AuthorizedRoute is already instantiated\r\n  // Authorized  render is already instantiated, children is no instantiated\r\n  // Secured is not instantiated\r\n  checkIsInstantiation = (\r\n    target: React.ReactNode | React.ComponentClass\r\n  ): React.FunctionComponent => {\r\n    if (isComponentClass(target)) {\r\n      const Target = target as React.ComponentClass;\r\n      return (props: any) => <Target {...props} />;\r\n    }\r\n    if (React.isValidElement(target)) {\r\n      return (props: any) => React.cloneElement(target, props);\r\n    }\r\n    return () => target as React.ReactNode & null;\r\n  };\r\n\r\n  render() {\r\n    const { component: Component } = this.state;\r\n    const { ok, error, promise, ...rest } = this.props;\r\n\r\n    return Component ? <Component {...rest} /> : <Spinner />;\r\n  }\r\n}\r\n","D:\\work\\react-vite-ts\\src\\components\\Icon\\index.tsx",["292"],"import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { createFromIconfontCN } from \"@ant-design/icons\";\r\nimport styles from \"./Icon.module.less\";\r\n\r\nexport interface IconType extends React.HTMLAttributes<any> {\r\n  type: string;\r\n  // 图标尺寸，默认 normal\r\n  size?: \"small\" | \"normal\" | \"large\" | null;\r\n  // 是否禁用\r\n  disabled?: boolean;\r\n}\r\n\r\nconst FontIcon = createFromIconfontCN({\r\n  // 请给新图标一个合适的驼峰命名，并保证单词正确\r\n  scriptUrl: \"//at.alicdn.com/t/font_2742219_5q5w02ov9d4.js\",\r\n});\r\n\r\nconst Icon: React.FC<IconType> = ({\r\n  className,\r\n  size = \"normal\",\r\n  disabled,\r\n  ...restProps\r\n}) => {\r\n  return (\r\n    <FontIcon\r\n      className={classNames(\r\n        {\r\n          [styles.large]: size === \"large\",\r\n          [styles.normal]: size === \"normal\",\r\n          [styles.small]: size === \"small\",\r\n          [styles.disabled]: disabled,\r\n        },\r\n        className\r\n      )}\r\n      {...restProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(Icon);\r\n","D:\\work\\react-vite-ts\\src\\components\\IconSelect\\IconSelect.tsx",["293","294","295"],"import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport classNames from \"classnames\";\r\nimport { InputProps } from \"antd/es/input\";\r\nimport Icon from \"../Icon\";\r\nimport PopoverMenu from \"../PopoverMenu\";\r\nimport { iconList } from \"./utils\";\r\nimport styles from \"./IconSelect.module.less\";\r\n\r\n// Omit表示忽略掉InputProps接口中的value,onChange,readOnly属性\r\n// https://juejin.cn/post/6893071406481801224#heading-14\r\nexport interface IconSelectProps\r\n  extends Omit<InputProps, \"value\" | \"onChange\" | \"readOnly\"> {\r\n  // 受控属性\r\n  value?: string;\r\n  // 受控属性\r\n  onChange?: (value: any) => void;\r\n  // 容器位置\r\n  getPopupContainer?: (props: any) => HTMLElement;\r\n}\r\n\r\n/**\r\n * 图标选择表单\r\n */\r\nfunction IconSelect({\r\n  value,\r\n  onChange,\r\n  disabled,\r\n  getPopupContainer,\r\n  ...props\r\n}: IconSelectProps) {\r\n  const [visible, setVisible] = React.useState(false);\r\n\r\n  function handleSelectIcon(item: string) {\r\n    if (onChange) {\r\n      onChange(item);\r\n    }\r\n    setVisible(false);\r\n  }\r\n\r\n  return (\r\n    <PopoverMenu\r\n      trigger={[\"click\"]}\r\n      visible={visible}\r\n      onVisibleChange={!disabled ? setVisible : undefined}\r\n      placement=\"bottomLeft\"\r\n      getPopupContainer={getPopupContainer}\r\n      content={\r\n        <div className={styles.selectWrap}>\r\n          {iconList.map((item) => (\r\n            <Icon\r\n              key={item}\r\n              className={classNames(styles.iconItem, {\r\n                [styles.active]: value === item,\r\n              })}\r\n              type={`icon-${item}`}\r\n              onClick={() => handleSelectIcon(item)}\r\n            />\r\n          ))}\r\n        </div>\r\n      }\r\n    >\r\n      <Input\r\n        placeholder={value ? undefined : \"请选择\"}\r\n        suffix={<Icon className={styles.filterIcon} type=\"icon-down\" />}\r\n        prefix={\r\n          value && <Icon className={styles.iconValue} type={`icon-${value}`} />\r\n        }\r\n        disabled={disabled}\r\n        readOnly\r\n        {...props}\r\n      />\r\n    </PopoverMenu>\r\n  );\r\n}\r\n\r\nexport default IconSelect;\r\n","D:\\work\\react-vite-ts\\src\\components\\IconSelect\\index.ts",[],"D:\\work\\react-vite-ts\\src\\components\\IconSelect\\utils.ts",[],"D:\\work\\react-vite-ts\\src\\components\\locales\\components\\ln-en.ts",[],"D:\\work\\react-vite-ts\\src\\components\\locales\\components\\ln-zh-cn.ts",[],"D:\\work\\react-vite-ts\\src\\components\\locales\\index.tsx",["296","297","298","299","300","301","302","303"],"import React from \"react\";\r\nimport type { IntlShape } from \"react-intl\";\r\nimport { createIntl, IntlProvider } from \"react-intl\";\r\n// 我们需要引入antd 的国际化的配置\r\nimport antdEnUS from \"antd/lib/locale/en_US\";\r\nimport antdZhCN from \"antd/lib/locale/zh_CN\";\r\n// 这是我们项目中中英文的配置，\r\nimport enLn from \"./components/ln-en\";\r\nimport zhLn from \"./components/ln-zh-cn\";\r\n\r\nlet gIntl: IntlShape;\r\n// 默认语言\r\nlet defaultLanguage = \"zh-cn\";\r\n// 当前使用的语言\r\nconst currentLocalName = localStorage.getItem(\"why__locale\") || defaultLanguage;\r\n\r\n// 本地未存储语言配置，默认添加一个\r\nif (!localStorage.getItem(\"why__locale\")) {\r\n  localStorage.setItem(\"why__locale\", defaultLanguage);\r\n}\r\n\r\n/**\r\n * 本地默认的语言配置\r\n */\r\nexport const localeInfo: Record<string, any> = {\r\n  en: {\r\n    messages: enLn,\r\n    locale: \"en\",\r\n    antd: antdEnUS,\r\n    momentLocale: \"\",\r\n  },\r\n  \"zh-cn\": {\r\n    messages: zhLn,\r\n    locale: \"zh-cn\",\r\n    antd: antdZhCN,\r\n    momentLocale: \"zh-cn\",\r\n  },\r\n};\r\n\r\n// 当前使用的localeInfo\r\nconst currentLocaleInfo = localeInfo[defaultLanguage];\r\n/**\r\n * 设置默认语言\r\n * @param lang\r\n */\r\nfunction setDefaultLanguage(lang: string) {\r\n  defaultLanguage = lang;\r\n}\r\n\r\n/**\r\n * 包裹了默认 locale 的 Provider\r\n * LocaleProvider 需要在App.tx使用，包装整个项目\r\n * @param props\r\n * @returns\r\n */\r\nexport const LocaleProvider: React.FC = (props) => {\r\n  return <IntlProvider locale={getLocale()}>{props.children}</IntlProvider>;\r\n};\r\n\r\n/**\r\n * 获取当前的 intl 对象，可以在 node 中使用\r\n * @param locale 需要切换的语言类型\r\n * @param changeIntl 是否不使用 g_intl\r\n * @returns IntlShape\r\n */\r\nconst getIntl = (locale?: string, changeIntl?: boolean) => {\r\n  // 如果全局的 g_intl 存在，且不是 setIntl 调用\r\n  if (gIntl && !changeIntl && !locale) {\r\n    return gIntl;\r\n  }\r\n  // 如果存在于 localeInfo 中\r\n  if (locale && localeInfo[locale]) {\r\n    return createIntl(localeInfo[locale]);\r\n  }\r\n\r\n  // 使用默认语言\r\n  if (localeInfo[defaultLanguage])\r\n    return createIntl(localeInfo[defaultLanguage]);\r\n  // 使用 zh-CN\r\n  if (localeInfo[\"zh-cn\"]) return createIntl(localeInfo[\"zh-cn\"]);\r\n  // 抛错\r\n  if (!locale || !!localeInfo[locale]) {\r\n    throw new Error(\r\n      \"The current popular language does not exist, please check the locales folder!\"\r\n    );\r\n  }\r\n  // 如果还没有，返回一个空的\r\n  return createIntl({\r\n    locale: \"zh-cn\",\r\n    messages: {},\r\n  });\r\n};\r\n\r\n/**\r\n * 切换全局的 intl 的设置\r\n * @param locale 语言的 key\r\n */\r\nconst setIntl = (locale: string) => {\r\n  gIntl = getIntl(locale, true);\r\n};\r\n\r\n/**\r\n * 获取当前选择的语言\r\n * @returns string\r\n */\r\nexport function getLocale() {\r\n  return currentLocalName;\r\n}\r\n\r\n/**\r\n * 切换语言\r\n * @param lang 语言的 key\r\n * @returns string\r\n */\r\nexport const setLocale = (lang: string) => {\r\n  // if (getStorageLocale() !== lang) {\r\n  if (typeof window.localStorage !== \"undefined\") {\r\n    window.localStorage.setItem(\"why__locale\", lang || \"\");\r\n  }\r\n  window.location.reload();\r\n  // }\r\n};\r\n\r\ninterface MessageDescriptor {\r\n  id?: string;\r\n  description?: string | any;\r\n  defaultMessage?: string;\r\n}\r\n\r\n/**\r\n * 语言转换\r\n * @param descriptor\r\n * @param values\r\n */\r\nexport const formatMessage = (\r\n  descriptor: MessageDescriptor,\r\n  values?: Record<string, any>\r\n) => {\r\n  if (!gIntl) {\r\n    setIntl(getLocale());\r\n  }\r\n  return gIntl.formatMessage(descriptor, values);\r\n};\r\n\r\n/**\r\n * 获取当前使用的语言信息\r\n * @returns\r\n */\r\nexport const getLocaleInfo = () => {\r\n  return currentLocaleInfo;\r\n};\r\n\r\nexport { createIntl };\r\n","D:\\work\\react-vite-ts\\src\\components\\PopoverMenu\\index.ts",[],"D:\\work\\react-vite-ts\\src\\components\\PopoverMenu\\PopoverMenu.tsx",["304","305","306","307"],"import React from \"react\";\r\nimport { Popover } from \"antd\";\r\nimport { useActivate, useUnactivate } from \"react-activation\";\r\nimport classNames from \"classnames\";\r\nimport { PopoverProps } from \"antd/es/popover\";\r\nimport styles from \"./PopoverMenu.module.less\";\r\n\r\nexport interface PopoverMenuProps\r\n  extends Omit<PopoverProps, \"overlayClassName\" | \"overlay\"> {\r\n  zIndex?: number;\r\n  content: React.ReactNode;\r\n}\r\n\r\n/**\r\n * 具有选项条的 Popover\r\n */\r\nfunction PopoverMenu({ zIndex, content, ...props }: PopoverMenuProps) {\r\n  const [canRender, setCanRender] = React.useState(true);\r\n\r\n  useActivate(() => {\r\n    setCanRender(true);\r\n  });\r\n\r\n  useUnactivate(() => {\r\n    setCanRender(false);\r\n  });\r\n\r\n  if (!canRender) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Popover\r\n      getPopupContainer={(triggerNode) => triggerNode.parentNode as HTMLElement}\r\n      overlayClassName={styles.menuContent}\r\n      overlayStyle={{ zIndex }}\r\n      {...props}\r\n      content={<ul className={styles.menuList}>{content}</ul>}\r\n    />\r\n  );\r\n}\r\n\r\nexport interface PopoverMenuItemProps extends React.LiHTMLAttributes<any> {\r\n  disabled?: boolean;\r\n  children?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * PopoverMenu 单条\r\n */\r\nexport function PopoverMenuItem({\r\n  disabled,\r\n  title,\r\n  children,\r\n  className,\r\n  ...props\r\n}: PopoverMenuItemProps) {\r\n  return (\r\n    <li\r\n      className={classNames(\r\n        styles.menuItem,\r\n        { [styles.disabled]: disabled },\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default PopoverMenu;\r\n","D:\\work\\react-vite-ts\\src\\components\\Spinner\\index.tsx",[],"D:\\work\\react-vite-ts\\src\\config.ts",[],"D:\\work\\react-vite-ts\\src\\hooks\\useDebounce.tsx",["308","309","310"],"import { useState, useEffect } from \"react\";\r\n\r\nfunction useDebounce(value: any, delay = 300) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n  useEffect(() => {\r\n    const handler = window.setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value, delay]);\r\n  return debouncedValue;\r\n}\r\nexport default useDebounce;\r\n","D:\\work\\react-vite-ts\\src\\main.tsx",[],"D:\\work\\react-vite-ts\\src\\pages\\home\\index.tsx",["311","312"],"import React, { useState } from \"react\";\r\n\r\nconst HomePage = ()=>{\r\n  return (\r\n    <div>22222</div>\r\n  )\r\n};\r\n\r\nexport default HomePage;\r\n","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\CountDown.tsx",["313","314","315","316","317"],"import React, { useState } from \"react\";\r\nimport { Button, Col, Form, Input, notification, Row, message } from \"antd\";\r\nimport classNames from \"classnames\";\r\nimport { FormInstance } from \"antd/es/form\";\r\nimport messageStyles from \"./LoginMessage.module.less\";\r\nimport styles from \"../index.module.less\";\r\nimport { formatMessage } from \"../../../components/locales\";\r\nimport { useInterval } from \"ahooks\";\r\n\r\ninterface ICountDownParams {\r\n  type: \"LOGIN\" | \"REG\" | \"PWD\"; // 类型（登录LOGIN/注册REG/找回密码PWD）\r\n  form: FormInstance;\r\n  invitation?: boolean; // 是否有邀请码，默认没有\r\n}\r\n\r\nconst CountDown: React.FC<ICountDownParams> = ({\r\n  type,\r\n  form,\r\n  invitation = false,\r\n}) => {\r\n  const prefixSpan = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <span>+86</span>\r\n    </Form.Item>\r\n  );\r\n\r\n  // 验证码描述\r\n  const [des, setDes] = useState(\"获取验证码\");\r\n  // 控制按钮是否可以点击\r\n  const [click, setClick] = useState(true);\r\n\r\n  /**\r\n   * 倒计时\r\n   */\r\n  const [count, setCount] = useState(60);\r\n  const [delay, setDelay] = useState<number | null>(null);\r\n  useInterval(() => {\r\n    setCount(count - 1);\r\n    setDes(`${\"重置\"}(${count} s)`);\r\n    if (count <= 0) {\r\n      setCount(60);\r\n      setDes(\"获取验证码\");\r\n      setDelay(null);\r\n      setClick(true);\r\n    }\r\n  }, delay);\r\n\r\n  /**\r\n   * 发送验证码\r\n   */\r\n  function sendCode() {\r\n    form\r\n      .validateFields([\"phone\", \"invitation_code\"])\r\n      .then((data: { [name: string]: any }) => {\r\n        setDes(formatMessage({ id: \"sending\" }));\r\n        setClick(false);\r\n        // getCode({\r\n        //   phone: data.phone,\r\n        //   invitation_code: data.invitation_code,\r\n        //   type,\r\n        // })\r\n        //   .then((res) => {\r\n        //     // 0: 错误  1： 正确\r\n        //     if (res.success === \"1\") {\r\n        //       setDelay(1000);\r\n        //       message.success(formatMessage({ id: \"SMSSend\" }));\r\n        //     } else {\r\n        //       setDes(formatMessage({ id: \"getCaptcha\" }));\r\n        //       setDelay(null);\r\n        //       setClick(true);\r\n        //       notification.error({\r\n        //         message: formatMessage({ id: res.msg }),\r\n        //       });\r\n        //     }\r\n        //   })\r\n        //   .catch(() => {\r\n        //     setDelay(null);\r\n        //   });\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name=\"phone\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: formatMessage({ id: \"PhoneEmpty\" }),\r\n          },\r\n          {\r\n            message: formatMessage({ id: \"inputPhone\" }),\r\n            pattern: /^1[3456789]\\d{9}$/,\r\n          },\r\n        ]}\r\n      >\r\n        <Input\r\n          className={classNames(styles.noLeftBorder, styles.phoneInput)}\r\n          placeholder={formatMessage({ id: \"Phone\" })}\r\n          addonBefore={prefixSpan}\r\n          style={{ width: \"100%\" }}\r\n          size=\"large\"\r\n        />\r\n      </Form.Item>\r\n      {invitation ? (\r\n        <Form.Item\r\n          name=\"invitation_code\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: formatMessage({ id: \"invitationCodeNull\" }),\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            className={styles.input}\r\n            placeholder={formatMessage({ id: \"invitationCodeS\" })}\r\n            maxLength={6}\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Form.Item\r\n        name=\"check_code\"\r\n        rules={[\r\n          { required: true, message: formatMessage({ id: \"messageNull\" }) },\r\n        ]}\r\n      >\r\n        <Row gutter={6}>\r\n          <Col className=\"gutter-row\" span={14}>\r\n            <Input\r\n              className={messageStyles.input}\r\n              placeholder={formatMessage({ id: \"messageNumber\" })}\r\n              maxLength={128}\r\n              size=\"large\"\r\n            />\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={10}>\r\n            <Button\r\n              className={messageStyles.button}\r\n              disabled={!click}\r\n              block\r\n              onClick={sendCode}\r\n            >\r\n              {des}\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CountDown;\r\n","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginContent.tsx",[],"D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginMessage.tsx",["318","319"],"import React from \"react\";\r\nimport { Form, Button } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CountDown from \"./CountDown\";\r\nimport styles from \"../index.module.less\";\r\nimport { formatMessage } from \"../../../components/locales\";\r\n\r\n/**\r\n * 验证码登录\r\n */\r\n\r\nexport interface ILoginParams {\r\n  updateWay: (name: string) => void;\r\n}\r\n\r\nconst LoginMessage: React.FC<ILoginParams> = ({ updateWay }) => {\r\n  const [form] = Form.useForm();\r\n  function handleFinish(data: { [name: string]: any }) {\r\n    // 避免接口报错后无法正常登录的问题\r\n  }\r\n\r\n  /**\r\n   * 切换登录方式\r\n   */\r\n  function handleClick() {\r\n    updateWay(\"pwd\");\r\n  }\r\n\r\n  /**\r\n   * 手机号前面的区号，目前写死，暂时不用\r\n   */\r\n  // const prefixSelector = (\r\n  //   <Form.Item name=\"prefix\" noStyle>\r\n  //     <Select className={styles.phoneSelect} style={{ width: 70 }} bordered={false}>\r\n  //       <Option value=\"86\">+86</Option>\r\n  //     </Select>\r\n  //   </Form.Item>\r\n  // );\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <div className={styles.header}>\r\n        <div className={styles.loginTitle}>\r\n          {formatMessage({ id: \"loginBtn\" })}\r\n        </div>\r\n        <div\r\n          onClick={handleClick}\r\n          className={styles.changeWay}\r\n          style={{ width: 136, textAlign: \"right\" }}\r\n        >\r\n          {formatMessage({ id: \"passwordLogin\" })}\r\n        </div>\r\n      </div>\r\n      <Form form={form} onFinish={handleFinish}>\r\n        <CountDown form={form} type=\"LOGIN\" />\r\n        <Button\r\n          className={styles.loginButton}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          loading={false}\r\n          size=\"large\"\r\n          block\r\n        >\r\n          {formatMessage({ id: \"LogIn\" })}\r\n        </Button>\r\n        <div className={styles.register}>\r\n          <Link to=\"/register\">\r\n            {formatMessage({ id: \"registeredAccount\" })}\r\n          </Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginMessage;\r\n","D:\\work\\react-vite-ts\\src\\pages\\login\\components\\LoginPassword.tsx",["320","321"],"import React from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { loginApp } from \"../../../services/login\";\r\nimport styles from \"../index.module.less\";\r\nimport { ILoginParams } from \"./LoginMessage\";\r\n\r\n/**\r\n * 密码登录\r\n *\r\n */\r\nconst LoginPassword: React.FC<ILoginParams> = ({ updateWay }) => {\r\n  const history = useHistory();\r\n\r\n  function handleFinish(data: { [name: string]: any }) {\r\n    loginApp({ userName: \"why\", pwd: \"123\" }).then((res) => {\r\n      if (res.code === 200) {\r\n        sessionStorage.setItem(\"token\", \"我有权限了\");\r\n        history.push(\"/home\");\r\n      } else {\r\n        message.error(\"用户名或密码错误！\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleClick() {\r\n    updateWay(\"message\");\r\n  }\r\n\r\n  return (\r\n    <div className={styles.content}>\r\n      <div className={styles.header}>\r\n        <div className={styles.loginTitle}>登陆</div>\r\n        <div\r\n          onClick={handleClick}\r\n          className={styles.changeWay}\r\n          style={{ width: 99, textAlign: \"right\" }}\r\n        >\r\n          验证码登陆\r\n        </div>\r\n      </div>\r\n      <Form onFinish={handleFinish}>\r\n        <Form.Item\r\n          name=\"user_info\"\r\n          rules={[{ required: true, message: \"用户名/手机号/邮箱不能为空\" }]}\r\n        >\r\n          <Input\r\n            className={styles.input}\r\n            placeholder={\"用户名/手机号/邮箱\"}\r\n            maxLength={128}\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"user_check\"\r\n          rules={[{ required: true, message: \"密码不能为空\" }]}\r\n        >\r\n          <Input\r\n            className={styles.input}\r\n            type=\"password\"\r\n            placeholder=\"密码\"\r\n            maxLength={128}\r\n            size=\"large\"\r\n          />\r\n        </Form.Item>\r\n        <div className={styles.toolBox}>\r\n          <Link\r\n            to=\"/forget-password\"\r\n            style={{ width: 105, textAlign: \"right\" }}\r\n          >\r\n            忘记密码\r\n          </Link>\r\n        </div>\r\n        <Button\r\n          className={styles.loginButton}\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          size=\"large\"\r\n          block\r\n        >\r\n          登陆\r\n        </Button>\r\n        <div className={styles.register}>\r\n          <Link to=\"/register\">注册</Link>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPassword;\r\n","D:\\work\\react-vite-ts\\src\\pages\\login\\index.tsx",["322","323"],"import React from \"react\";\r\nimport { useLocalStorageState } from \"ahooks\";\r\nimport LoginPassword from \"./components/LoginPassword\";\r\nimport LoginMessage from \"./components/LoginMessage\";\r\nimport styles from \"./index.module.less\";\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [loginWay, setLoginWay] = useLocalStorageState(\"login__Login__way\", \"\");\r\n  const [way, setWay] = React.useState<string>(loginWay);\r\n\r\n  /**\r\n   * 更新登录方式\r\n   * @param name\r\n   */\r\n  function updateWay(name: string) {\r\n    setWay(name);\r\n    setLoginWay(name);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.loginContainer}>\r\n      <div className={styles.loginLogo} />\r\n      <div className={styles.loginForm}>\r\n        {/*{way === \"message\" ? (*/}\r\n        {/*  <LoginMessage updateWay={updateWay} />*/}\r\n        {/*) : (*/}\r\n        <LoginPassword updateWay={updateWay} />\r\n        {/*)}*/}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","D:\\work\\react-vite-ts\\src\\pages\\todoList\\index.tsx",["324","325"],"D:\\work\\react-vite-ts\\src\\router\\index.tsx",["326"],"D:\\work\\react-vite-ts\\src\\services\\login.ts",[],"D:\\work\\react-vite-ts\\src\\utils\\reuqest.ts",[],"D:\\work\\react-vite-ts\\src\\vite-env.d.ts",[],{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"332","line":12,"column":1,"nodeType":"333","messageId":"334","endLine":12,"endColumn":15},{"ruleId":"327","severity":1,"message":"335","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"332","line":32,"column":3,"nodeType":"336","messageId":"334","endLine":32,"endColumn":22},{"ruleId":"331","severity":1,"message":"332","line":36,"column":27,"nodeType":"337","messageId":"334","endLine":39,"endColumn":7},{"ruleId":"331","severity":1,"message":"332","line":48,"column":3,"nodeType":"336","messageId":"334","endLine":48,"endColumn":54},{"ruleId":"338","severity":1,"message":"339","line":74,"column":22,"nodeType":"340","messageId":"341","endLine":74,"endColumn":25,"suggestions":"342"},{"ruleId":"338","severity":1,"message":"339","line":77,"column":22,"nodeType":"340","messageId":"341","endLine":77,"endColumn":25,"suggestions":"343"},{"ruleId":"331","severity":1,"message":"332","line":82,"column":3,"nodeType":"336","messageId":"334","endLine":82,"endColumn":11},{"ruleId":"327","severity":1,"message":"344","line":84,"column":13,"nodeType":"329","messageId":"330","endLine":84,"endColumn":15},{"ruleId":"327","severity":1,"message":"345","line":84,"column":17,"nodeType":"329","messageId":"330","endLine":84,"endColumn":22},{"ruleId":"327","severity":1,"message":"346","line":84,"column":24,"nodeType":"329","messageId":"330","endLine":84,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":6,"column":56,"nodeType":"340","messageId":"341","endLine":6,"endColumn":59,"suggestions":"347"},{"ruleId":"338","severity":1,"message":"339","line":17,"column":22,"nodeType":"340","messageId":"341","endLine":17,"endColumn":25,"suggestions":"348"},{"ruleId":"338","severity":1,"message":"339","line":19,"column":31,"nodeType":"340","messageId":"341","endLine":19,"endColumn":34,"suggestions":"349"},{"ruleId":"331","severity":1,"message":"332","line":25,"column":1,"nodeType":"333","messageId":"334","endLine":31,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":25,"column":41,"nodeType":"340","messageId":"341","endLine":25,"endColumn":44,"suggestions":"350"},{"ruleId":"327","severity":1,"message":"351","line":46,"column":10,"nodeType":"329","messageId":"330","endLine":46,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":106,"column":8,"nodeType":"333","messageId":"334","endLine":106,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":115,"column":26,"nodeType":"337","messageId":"334","endLine":115,"endColumn":43},{"ruleId":"338","severity":1,"message":"339","line":126,"column":26,"nodeType":"340","messageId":"341","endLine":126,"endColumn":29,"suggestions":"352"},{"ruleId":"331","severity":1,"message":"332","line":135,"column":30,"nodeType":"337","messageId":"334","endLine":138,"endColumn":5},{"ruleId":"338","severity":1,"message":"339","line":137,"column":27,"nodeType":"340","messageId":"341","endLine":137,"endColumn":30,"suggestions":"353"},{"ruleId":"331","severity":1,"message":"332","line":149,"column":30,"nodeType":"337","messageId":"334","endLine":149,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":17,"column":1,"nodeType":"333","messageId":"334","endLine":17,"endColumn":70},{"ruleId":"338","severity":1,"message":"339","line":43,"column":70,"nodeType":"340","messageId":"341","endLine":43,"endColumn":73,"suggestions":"354"},{"ruleId":"331","severity":1,"message":"332","line":51,"column":8,"nodeType":"333","messageId":"334","endLine":57,"endColumn":25},{"ruleId":"327","severity":1,"message":"355","line":53,"column":3,"nodeType":"329","messageId":"330","endLine":53,"endColumn":8},{"ruleId":"331","severity":1,"message":"332","line":3,"column":1,"nodeType":"333","messageId":"334","endLine":3,"endColumn":46},{"ruleId":"331","severity":1,"message":"356","line":3,"column":22,"nodeType":"329","messageId":"357","endLine":3,"endColumn":32},{"ruleId":"338","severity":1,"message":"339","line":3,"column":29,"nodeType":"340","messageId":"341","endLine":3,"endColumn":32,"suggestions":"358"},{"ruleId":"327","severity":1,"message":"359","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":20},{"ruleId":"327","severity":1,"message":"360","line":9,"column":10,"nodeType":"329","messageId":"330","endLine":9,"endColumn":13},{"ruleId":"331","severity":1,"message":"332","line":17,"column":20,"nodeType":"337","messageId":"334","endLine":17,"endColumn":25},{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"332","line":12,"column":1,"nodeType":"333","messageId":"334","endLine":12,"endColumn":15},{"ruleId":"327","severity":1,"message":"335","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":26},{"ruleId":"331","severity":1,"message":"332","line":32,"column":3,"nodeType":"336","messageId":"334","endLine":32,"endColumn":22},{"ruleId":"331","severity":1,"message":"332","line":36,"column":27,"nodeType":"337","messageId":"334","endLine":39,"endColumn":7},{"ruleId":"331","severity":1,"message":"332","line":48,"column":3,"nodeType":"336","messageId":"334","endLine":48,"endColumn":54},{"ruleId":"338","severity":1,"message":"339","line":74,"column":22,"nodeType":"340","messageId":"341","endLine":74,"endColumn":25,"suggestions":"361"},{"ruleId":"338","severity":1,"message":"339","line":77,"column":22,"nodeType":"340","messageId":"341","endLine":77,"endColumn":25,"suggestions":"362"},{"ruleId":"331","severity":1,"message":"332","line":82,"column":3,"nodeType":"336","messageId":"334","endLine":82,"endColumn":11},{"ruleId":"327","severity":1,"message":"344","line":84,"column":13,"nodeType":"329","messageId":"330","endLine":84,"endColumn":15},{"ruleId":"327","severity":1,"message":"345","line":84,"column":17,"nodeType":"329","messageId":"330","endLine":84,"endColumn":22},{"ruleId":"327","severity":1,"message":"346","line":84,"column":24,"nodeType":"329","messageId":"330","endLine":84,"endColumn":31},{"ruleId":"338","severity":1,"message":"339","line":6,"column":56,"nodeType":"340","messageId":"341","endLine":6,"endColumn":59,"suggestions":"363"},{"ruleId":"338","severity":1,"message":"339","line":17,"column":22,"nodeType":"340","messageId":"341","endLine":17,"endColumn":25,"suggestions":"364"},{"ruleId":"338","severity":1,"message":"339","line":19,"column":31,"nodeType":"340","messageId":"341","endLine":19,"endColumn":34,"suggestions":"365"},{"ruleId":"331","severity":1,"message":"332","line":25,"column":1,"nodeType":"333","messageId":"334","endLine":31,"endColumn":20},{"ruleId":"338","severity":1,"message":"339","line":25,"column":41,"nodeType":"340","messageId":"341","endLine":25,"endColumn":44,"suggestions":"366"},{"ruleId":"327","severity":1,"message":"351","line":46,"column":10,"nodeType":"329","messageId":"330","endLine":46,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":106,"column":8,"nodeType":"333","messageId":"334","endLine":106,"endColumn":28},{"ruleId":"331","severity":1,"message":"332","line":115,"column":26,"nodeType":"337","messageId":"334","endLine":115,"endColumn":43},{"ruleId":"338","severity":1,"message":"339","line":126,"column":26,"nodeType":"340","messageId":"341","endLine":126,"endColumn":29,"suggestions":"367"},{"ruleId":"331","severity":1,"message":"332","line":135,"column":30,"nodeType":"337","messageId":"334","endLine":138,"endColumn":5},{"ruleId":"338","severity":1,"message":"339","line":137,"column":27,"nodeType":"340","messageId":"341","endLine":137,"endColumn":30,"suggestions":"368"},{"ruleId":"331","severity":1,"message":"332","line":149,"column":30,"nodeType":"337","messageId":"334","endLine":149,"endColumn":35},{"ruleId":"331","severity":1,"message":"332","line":17,"column":1,"nodeType":"333","messageId":"334","endLine":17,"endColumn":70},{"ruleId":"338","severity":1,"message":"339","line":43,"column":70,"nodeType":"340","messageId":"341","endLine":43,"endColumn":73,"suggestions":"369"},{"ruleId":"331","severity":1,"message":"332","line":51,"column":8,"nodeType":"333","messageId":"334","endLine":57,"endColumn":25},{"ruleId":"327","severity":1,"message":"355","line":53,"column":3,"nodeType":"329","messageId":"330","endLine":53,"endColumn":8},{"ruleId":"331","severity":1,"message":"332","line":3,"column":1,"nodeType":"333","messageId":"334","endLine":3,"endColumn":46},{"ruleId":"331","severity":1,"message":"356","line":3,"column":22,"nodeType":"329","messageId":"357","endLine":3,"endColumn":32},{"ruleId":"338","severity":1,"message":"339","line":3,"column":29,"nodeType":"340","messageId":"341","endLine":3,"endColumn":32,"suggestions":"370"},{"ruleId":"327","severity":1,"message":"328","line":1,"column":17,"nodeType":"329","messageId":"330","endLine":1,"endColumn":25},{"ruleId":"331","severity":1,"message":"332","line":3,"column":18,"nodeType":"337","messageId":"334","endLine":3,"endColumn":22},{"ruleId":"327","severity":1,"message":"371","line":2,"column":36,"nodeType":"329","messageId":"330","endLine":2,"endColumn":48},{"ruleId":"327","severity":1,"message":"372","line":2,"column":55,"nodeType":"329","messageId":"330","endLine":2,"endColumn":62},{"ruleId":"327","severity":1,"message":"373","line":17,"column":3,"nodeType":"329","messageId":"330","endLine":17,"endColumn":7},{"ruleId":"327","severity":1,"message":"374","line":54,"column":14,"nodeType":"329","messageId":"330","endLine":54,"endColumn":43},{"ruleId":"338","severity":1,"message":"339","line":54,"column":38,"nodeType":"340","messageId":"341","endLine":54,"endColumn":41,"suggestions":"375"},{"ruleId":"327","severity":1,"message":"374","line":18,"column":25,"nodeType":"329","messageId":"330","endLine":18,"endColumn":54},{"ruleId":"338","severity":1,"message":"339","line":18,"column":49,"nodeType":"340","messageId":"341","endLine":18,"endColumn":52,"suggestions":"376"},{"ruleId":"327","severity":1,"message":"374","line":15,"column":25,"nodeType":"329","messageId":"330","endLine":15,"endColumn":54},{"ruleId":"338","severity":1,"message":"339","line":15,"column":49,"nodeType":"340","messageId":"341","endLine":15,"endColumn":52,"suggestions":"377"},{"ruleId":"327","severity":1,"message":"359","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":20},{"ruleId":"327","severity":1,"message":"360","line":9,"column":10,"nodeType":"329","messageId":"330","endLine":9,"endColumn":13},{"ruleId":"338","severity":1,"message":"339","line":20,"column":12,"nodeType":"340","messageId":"341","endLine":20,"endColumn":15,"suggestions":"378"},{"ruleId":"327","severity":1,"message":"379","line":95,"column":9,"nodeType":"329","messageId":"330","endLine":95,"endColumn":18},{"ruleId":"331","severity":1,"message":"332","line":11,"column":20,"nodeType":"337","messageId":"334","endLine":11,"endColumn":25},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'useEffect' is defined but never used.","FunctionExpression","ArrowFunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["380","381"],["382","383"],"'ok' is assigned a value but never used.","'error' is assigned a value but never used.","'promise' is assigned a value but never used.",["384","385"],["386","387"],["388","389"],["390","391"],"'setDefaultLanguage' is defined but never used.",["392","393"],["394","395"],["396","397"],"'title' is defined but never used.","Argument 'value' should be typed with a non-any type.","anyTypedArg",["398","399"],"'LoginMessage' is defined but never used.","'way' is assigned a value but never used.",["400","401"],["402","403"],["404","405"],["406","407"],["408","409"],["410","411"],["412","413"],["414","415"],["416","417"],["418","419"],"'notification' is defined but never used.","'message' is defined but never used.","'type' is defined but never used.","'data' is defined but never used.",["420","421"],["422","423"],["424","425"],["426","427"],"'isOverlap' is assigned a value but never used.",{"messageId":"428","fix":"429","desc":"430"},{"messageId":"431","fix":"432","desc":"433"},{"messageId":"428","fix":"434","desc":"430"},{"messageId":"431","fix":"435","desc":"433"},{"messageId":"428","fix":"436","desc":"430"},{"messageId":"431","fix":"437","desc":"433"},{"messageId":"428","fix":"438","desc":"430"},{"messageId":"431","fix":"439","desc":"433"},{"messageId":"428","fix":"440","desc":"430"},{"messageId":"431","fix":"441","desc":"433"},{"messageId":"428","fix":"442","desc":"430"},{"messageId":"431","fix":"443","desc":"433"},{"messageId":"428","fix":"444","desc":"430"},{"messageId":"431","fix":"445","desc":"433"},{"messageId":"428","fix":"446","desc":"430"},{"messageId":"431","fix":"447","desc":"433"},{"messageId":"428","fix":"448","desc":"430"},{"messageId":"431","fix":"449","desc":"433"},{"messageId":"428","fix":"450","desc":"430"},{"messageId":"431","fix":"451","desc":"433"},{"messageId":"428","fix":"452","desc":"430"},{"messageId":"431","fix":"453","desc":"433"},{"messageId":"428","fix":"454","desc":"430"},{"messageId":"431","fix":"455","desc":"433"},{"messageId":"428","fix":"456","desc":"430"},{"messageId":"431","fix":"457","desc":"433"},{"messageId":"428","fix":"458","desc":"430"},{"messageId":"431","fix":"459","desc":"433"},{"messageId":"428","fix":"460","desc":"430"},{"messageId":"431","fix":"461","desc":"433"},{"messageId":"428","fix":"462","desc":"430"},{"messageId":"431","fix":"463","desc":"433"},{"messageId":"428","fix":"464","desc":"430"},{"messageId":"431","fix":"465","desc":"433"},{"messageId":"428","fix":"466","desc":"430"},{"messageId":"431","fix":"467","desc":"433"},{"messageId":"428","fix":"468","desc":"430"},{"messageId":"431","fix":"469","desc":"433"},{"messageId":"428","fix":"470","desc":"430"},{"messageId":"431","fix":"471","desc":"433"},{"messageId":"428","fix":"472","desc":"430"},{"messageId":"431","fix":"473","desc":"433"},{"messageId":"428","fix":"474","desc":"430"},{"messageId":"431","fix":"475","desc":"433"},{"messageId":"428","fix":"476","desc":"430"},{"messageId":"431","fix":"477","desc":"433"},{"messageId":"428","fix":"478","desc":"430"},{"messageId":"431","fix":"479","desc":"433"},"suggestUnknown",{"range":"480","text":"481"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"480","text":"482"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"483","text":"481"},{"range":"483","text":"482"},{"range":"484","text":"481"},{"range":"484","text":"482"},{"range":"485","text":"481"},{"range":"485","text":"482"},{"range":"486","text":"481"},{"range":"486","text":"482"},{"range":"487","text":"481"},{"range":"487","text":"482"},{"range":"488","text":"481"},{"range":"488","text":"482"},{"range":"489","text":"481"},{"range":"489","text":"482"},{"range":"490","text":"481"},{"range":"490","text":"482"},{"range":"491","text":"481"},{"range":"491","text":"482"},{"range":"492","text":"481"},{"range":"492","text":"482"},{"range":"493","text":"481"},{"range":"493","text":"482"},{"range":"494","text":"481"},{"range":"494","text":"482"},{"range":"495","text":"481"},{"range":"495","text":"482"},{"range":"496","text":"481"},{"range":"496","text":"482"},{"range":"497","text":"481"},{"range":"497","text":"482"},{"range":"498","text":"481"},{"range":"498","text":"482"},{"range":"499","text":"481"},{"range":"499","text":"482"},{"range":"500","text":"481"},{"range":"500","text":"482"},{"range":"501","text":"481"},{"range":"501","text":"482"},{"range":"502","text":"481"},{"range":"502","text":"482"},{"range":"503","text":"481"},{"range":"503","text":"482"},{"range":"504","text":"481"},{"range":"504","text":"482"},{"range":"505","text":"481"},{"range":"505","text":"482"},[2018,2021],"unknown","never",[2116,2119],[219,222],[557,560],[611,614],[679,682],[2726,2729],[2905,2908],[1056,1059],[74,77],[2091,2094],[2192,2195],[224,227],[573,576],[629,632],[703,706],[2851,2854],[3041,3044],[1098,1101],[76,79],[1402,1405],[501,504],[457,460],[435,438]]