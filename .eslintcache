[{"D:\\mywork\\vite-react-template-typescript-master\\src\\App.tsx":"1","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\AuthorizedButton.tsx":"2","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\checkPermissions.tsx":"3","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\index.tsx":"4","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\PromiseRender.tsx":"5","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Icon\\index.tsx":"6","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\IconSelect.tsx":"7","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\index.ts":"8","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\utils.ts":"9","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-en.ts":"10","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-zh-cn.ts":"11","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\index.tsx":"12","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\index.ts":"13","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\PopoverMenu.tsx":"14","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Spinner\\index.tsx":"15","D:\\mywork\\vite-react-template-typescript-master\\src\\config.ts":"16","D:\\mywork\\vite-react-template-typescript-master\\src\\hooks\\useDebounce.tsx":"17","D:\\mywork\\vite-react-template-typescript-master\\src\\main.tsx":"18","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\auth\\index.tsx":"19","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\customHooks\\index.tsx":"20","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\doc\\index.tsx":"21","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\home\\index.tsx":"22","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\icon\\index.tsx":"23","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\locales\\index.tsx":"24","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\CountDown.tsx":"25","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginContent.tsx":"26","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginMessage.tsx":"27","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginPassword.tsx":"28","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\index.tsx":"29","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\publicComponents\\index.tsx":"30","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\drag.tsx":"31","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\edit.tsx":"32","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\index.tsx":"33","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\privateRouter.tsx":"34","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\routerConfig.tsx":"35","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\index.tsx":"36","D:\\mywork\\vite-react-template-typescript-master\\src\\services\\login.ts":"37","D:\\mywork\\vite-react-template-typescript-master\\src\\utils\\reuqest.ts":"38","D:\\mywork\\vite-react-template-typescript-master\\src\\vite-env.d.ts":"39"},{"size":643,"mtime":1642669912203,"results":"40","hashOfConfig":"41"},{"size":972,"mtime":1629878392000,"results":"42","hashOfConfig":"41"},{"size":1860,"mtime":1629878392000,"results":"43","hashOfConfig":"41"},{"size":81,"mtime":1629878392000,"results":"44","hashOfConfig":"41"},{"size":2409,"mtime":1629878392000,"results":"45","hashOfConfig":"41"},{"size":992,"mtime":1629878392000,"results":"46","hashOfConfig":"41"},{"size":1988,"mtime":1629878392000,"results":"47","hashOfConfig":"41"},{"size":67,"mtime":1629878392000,"results":"48","hashOfConfig":"41"},{"size":169,"mtime":1629878392000,"results":"49","hashOfConfig":"41"},{"size":239,"mtime":1629878392000,"results":"50","hashOfConfig":"41"},{"size":189,"mtime":1629878392000,"results":"51","hashOfConfig":"41"},{"size":3550,"mtime":1629878392000,"results":"52","hashOfConfig":"41"},{"size":102,"mtime":1629878392000,"results":"53","hashOfConfig":"41"},{"size":1505,"mtime":1629878392000,"results":"54","hashOfConfig":"41"},{"size":664,"mtime":1629878392000,"results":"55","hashOfConfig":"41"},{"size":567,"mtime":1629878392000,"results":"56","hashOfConfig":"41"},{"size":402,"mtime":1629878392000,"results":"57","hashOfConfig":"41"},{"size":226,"mtime":1629878392000,"results":"58","hashOfConfig":"41"},{"size":1146,"mtime":1629878392000,"results":"59","hashOfConfig":"41"},{"size":347,"mtime":1629878392000,"results":"60","hashOfConfig":"41"},{"size":438,"mtime":1629878392000,"results":"61","hashOfConfig":"41"},{"size":2734,"mtime":1629878392000,"results":"62","hashOfConfig":"41"},{"size":2580,"mtime":1629878392000,"results":"63","hashOfConfig":"41"},{"size":1130,"mtime":1629878392000,"results":"64","hashOfConfig":"41"},{"size":4177,"mtime":1629878392000,"results":"65","hashOfConfig":"41"},{"size":680,"mtime":1629878392000,"results":"66","hashOfConfig":"41"},{"size":1962,"mtime":1629878392000,"results":"67","hashOfConfig":"41"},{"size":2417,"mtime":1629878392000,"results":"68","hashOfConfig":"41"},{"size":914,"mtime":1629878392000,"results":"69","hashOfConfig":"41"},{"size":204,"mtime":1629878392000,"results":"70","hashOfConfig":"41"},{"size":2711,"mtime":1629878392000,"results":"71","hashOfConfig":"41"},{"size":3397,"mtime":1629878392000,"results":"72","hashOfConfig":"41"},{"size":3461,"mtime":1629878392000,"results":"73","hashOfConfig":"41"},{"size":618,"mtime":1629878392000,"results":"74","hashOfConfig":"41"},{"size":232,"mtime":1629878392000,"results":"75","hashOfConfig":"41"},{"size":1652,"mtime":1629878392000,"results":"76","hashOfConfig":"41"},{"size":502,"mtime":1629878392000,"results":"77","hashOfConfig":"41"},{"size":324,"mtime":1629878392000,"results":"78","hashOfConfig":"41"},{"size":38,"mtime":1629878392000,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},"1kycmhh",{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\mywork\\vite-react-template-typescript-master\\src\\App.tsx",["178","179"],"import React, { useState } from \"react\";\nimport ConfigProvider from \"antd/lib/config-provider\";\nimport \"antd/dist/antd.less\";\nimport style from \"./App.module.less\";\nimport RouterPage from \"./router\";\nimport { getLocale, localeInfo, LocaleProvider } from \"./components/locales\";\n\n/**\n * 入口\n * @constructor\n */\nfunction App() {\n  return (\n    <div className={style.App}>\n      <header className={style.AppHeader}>\n        <LocaleProvider>\n          <ConfigProvider locale={localeInfo[getLocale()]?.antd}>\n            <RouterPage />\n          </ConfigProvider>\n        </LocaleProvider>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\AuthorizedButton.tsx",["180"],"import React, { useEffect, useState } from \"react\";\nimport type { IAuthorityType } from \"./checkPermissions\";\nimport checkPermissions from \"./checkPermissions\";\n\ninterface AuthorizedProps {\n  // 权限判定\n  authority: IAuthorityType;\n  // render\n  render?: () => React.ReactNode;\n  // 未匹配结果\n  noMatch?: React.ReactNode;\n  // children\n  children?: React.ReactNode;\n}\n\n/**\n * 按钮权限判定\n */\nfunction AuthorizedButton({\n  children,\n  authority,\n  render,\n  noMatch,\n}: AuthorizedProps) {\n  // 目前是写死的按钮权限，真实场景应该会有配置页面，通过接口返回对应权限，然后放到permission中\n  const [permissions] = useState<string[]>([\"button\", \"button1\", \"button2\"]);\n\n  const result = checkPermissions(\n    authority,\n    // state?.userInfo!.userResourceMap[state.enterpriseId],\n    permissions,\n    render ? render() : children,\n    noMatch\n  );\n  return <>{result}</>;\n}\n\nexport default React.memo(AuthorizedButton);\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\checkPermissions.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Authorized\\PromiseRender.tsx",["181","182","183","184","185","186","187","188","189"],"import React from \"react\";\nimport { isEqual } from \"lodash\";\nimport Spinner from \"@/components/Spinner\";\n\nexport const isComponentClass = (\n  component: React.ComponentClass | React.ReactNode\n): boolean => {\n  if (!component) return false;\n  const proto = Object.getPrototypeOf(component);\n  if (proto === React.Component || proto === Function.prototype) return true;\n  return isComponentClass(proto);\n};\n\ninterface PromiseRenderProps<T, K> {\n  ok: T;\n  error: K;\n  promise: Promise<boolean>;\n}\n\ninterface PromiseRenderState {\n  component: React.ComponentClass | React.FunctionComponent;\n}\n\nexport default class PromiseRender<T, K> extends React.Component<\n  PromiseRenderProps<T, K>,\n  PromiseRenderState\n> {\n  state: PromiseRenderState = {\n    component: () => null,\n  };\n\n  componentDidMount() {\n    this.setRenderComponent(this.props);\n  }\n\n  shouldComponentUpdate = (\n    nextProps: PromiseRenderProps<T, K>,\n    nextState: PromiseRenderState\n  ) => {\n    const { component } = this.state;\n    if (!isEqual(nextProps, this.props)) {\n      this.setRenderComponent(nextProps);\n    }\n    return nextState.component !== component;\n  };\n\n  // set render Component : ok or error\n  setRenderComponent(props: PromiseRenderProps<T, K>) {\n    const ok = this.checkIsInstantiation(props.ok);\n    const error = this.checkIsInstantiation(props.error);\n    props.promise\n      .then(() => {\n        this.setState({\n          component: ok,\n        });\n        return true;\n      })\n      .catch(() => {\n        this.setState({\n          component: error,\n        });\n      });\n  }\n\n  // Determine whether the incoming component has been instantiated\n  // AuthorizedRoute is already instantiated\n  // Authorized  render is already instantiated, children is no instantiated\n  // Secured is not instantiated\n  checkIsInstantiation = (\n    target: React.ReactNode | React.ComponentClass\n  ): React.FunctionComponent => {\n    if (isComponentClass(target)) {\n      const Target = target as React.ComponentClass;\n      return (props: any) => <Target {...props} />;\n    }\n    if (React.isValidElement(target)) {\n      return (props: any) => React.cloneElement(target, props);\n    }\n    return () => target as React.ReactNode & null;\n  };\n\n  render() {\n    const { component: Component } = this.state;\n    const { ok, error, promise, ...rest } = this.props;\n\n    return Component ? <Component {...rest} /> : <Spinner />;\n  }\n}\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Icon\\index.tsx",["190"],"import React from \"react\";\nimport classNames from \"classnames\";\nimport { createFromIconfontCN } from \"@ant-design/icons\";\nimport styles from \"./Icon.module.less\";\n\nexport interface IconType extends React.HTMLAttributes<any> {\n  type: string;\n  // 图标尺寸，默认 normal\n  size?: \"small\" | \"normal\" | \"large\" | null;\n  // 是否禁用\n  disabled?: boolean;\n}\n\nconst FontIcon = createFromIconfontCN({\n  // 请给新图标一个合适的驼峰命名，并保证单词正确\n  scriptUrl: \"//at.alicdn.com/t/font_2742219_5q5w02ov9d4.js\",\n});\n\nconst Icon: React.FC<IconType> = ({\n  className,\n  size = \"normal\",\n  disabled,\n  ...restProps\n}) => {\n  return (\n    <FontIcon\n      className={classNames(\n        {\n          [styles.large]: size === \"large\",\n          [styles.normal]: size === \"normal\",\n          [styles.small]: size === \"small\",\n          [styles.disabled]: disabled,\n        },\n        className\n      )}\n      {...restProps}\n    />\n  );\n};\n\nexport default React.memo(Icon);\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\IconSelect.tsx",["191","192","193"],"import React from \"react\";\nimport { Input } from \"antd\";\nimport classNames from \"classnames\";\nimport { InputProps } from \"antd/es/input\";\nimport Icon from \"../Icon\";\nimport PopoverMenu from \"../PopoverMenu\";\nimport { iconList } from \"./utils\";\nimport styles from \"./IconSelect.module.less\";\n\n// Omit表示忽略掉InputProps接口中的value,onChange,readOnly属性\n// https://juejin.cn/post/6893071406481801224#heading-14\nexport interface IconSelectProps\n  extends Omit<InputProps, \"value\" | \"onChange\" | \"readOnly\"> {\n  // 受控属性\n  value?: string;\n  // 受控属性\n  onChange?: (value: any) => void;\n  // 容器位置\n  getPopupContainer?: (props: any) => HTMLElement;\n}\n\n/**\n * 图标选择表单\n */\nfunction IconSelect({\n  value,\n  onChange,\n  disabled,\n  getPopupContainer,\n  ...props\n}: IconSelectProps) {\n  const [visible, setVisible] = React.useState(false);\n\n  function handleSelectIcon(item: string) {\n    if (onChange) {\n      onChange(item);\n    }\n    setVisible(false);\n  }\n\n  return (\n    <PopoverMenu\n      trigger={[\"click\"]}\n      visible={visible}\n      onVisibleChange={!disabled ? setVisible : undefined}\n      placement=\"bottomLeft\"\n      getPopupContainer={getPopupContainer}\n      content={\n        <div className={styles.selectWrap}>\n          {iconList.map((item) => (\n            <Icon\n              key={item}\n              className={classNames(styles.iconItem, {\n                [styles.active]: value === item,\n              })}\n              type={`icon-${item}`}\n              onClick={() => handleSelectIcon(item)}\n            />\n          ))}\n        </div>\n      }\n    >\n      <Input\n        placeholder={value ? undefined : \"请选择\"}\n        suffix={<Icon className={styles.filterIcon} type=\"icon-down\" />}\n        prefix={\n          value && <Icon className={styles.iconValue} type={`icon-${value}`} />\n        }\n        disabled={disabled}\n        readOnly\n        {...props}\n      />\n    </PopoverMenu>\n  );\n}\n\nexport default IconSelect;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\index.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\IconSelect\\utils.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-en.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\components\\ln-zh-cn.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\locales\\index.tsx",["194","195","196","197","198","199","200","201"],"import React from \"react\";\nimport type { IntlShape } from \"react-intl\";\nimport { createIntl, IntlProvider } from \"react-intl\";\n// 我们需要引入antd 的国际化的配置\nimport antdEnUS from \"antd/lib/locale/en_US\";\nimport antdZhCN from \"antd/lib/locale/zh_CN\";\n// 这是我们项目中中英文的配置，\nimport enLn from \"./components/ln-en\";\nimport zhLn from \"./components/ln-zh-cn\";\n\nlet gIntl: IntlShape;\n// 默认语言\nlet defaultLanguage = \"zh-cn\";\n// 当前使用的语言\nconst currentLocalName = localStorage.getItem(\"why__locale\") || defaultLanguage;\n\n// 本地未存储语言配置，默认添加一个\nif (!localStorage.getItem(\"why__locale\")) {\n  localStorage.setItem(\"why__locale\", defaultLanguage);\n}\n\n/**\n * 本地默认的语言配置\n */\nexport const localeInfo: Record<string, any> = {\n  en: {\n    messages: enLn,\n    locale: \"en\",\n    antd: antdEnUS,\n    momentLocale: \"\",\n  },\n  \"zh-cn\": {\n    messages: zhLn,\n    locale: \"zh-cn\",\n    antd: antdZhCN,\n    momentLocale: \"zh-cn\",\n  },\n};\n\n// 当前使用的localeInfo\nconst currentLocaleInfo = localeInfo[defaultLanguage];\n/**\n * 设置默认语言\n * @param lang\n */\nfunction setDefaultLanguage(lang: string) {\n  defaultLanguage = lang;\n}\n\n/**\n * 包裹了默认 locale 的 Provider\n * LocaleProvider 需要在App.tx使用，包装整个项目\n * @param props\n * @returns\n */\nexport const LocaleProvider: React.FC = (props) => {\n  return <IntlProvider locale={getLocale()}>{props.children}</IntlProvider>;\n};\n\n/**\n * 获取当前的 intl 对象，可以在 node 中使用\n * @param locale 需要切换的语言类型\n * @param changeIntl 是否不使用 g_intl\n * @returns IntlShape\n */\nconst getIntl = (locale?: string, changeIntl?: boolean) => {\n  // 如果全局的 g_intl 存在，且不是 setIntl 调用\n  if (gIntl && !changeIntl && !locale) {\n    return gIntl;\n  }\n  // 如果存在于 localeInfo 中\n  if (locale && localeInfo[locale]) {\n    return createIntl(localeInfo[locale]);\n  }\n\n  // 使用默认语言\n  if (localeInfo[defaultLanguage])\n    return createIntl(localeInfo[defaultLanguage]);\n  // 使用 zh-CN\n  if (localeInfo[\"zh-cn\"]) return createIntl(localeInfo[\"zh-cn\"]);\n  // 抛错\n  if (!locale || !!localeInfo[locale]) {\n    throw new Error(\n      \"The current popular language does not exist, please check the locales folder!\"\n    );\n  }\n  // 如果还没有，返回一个空的\n  return createIntl({\n    locale: \"zh-cn\",\n    messages: {},\n  });\n};\n\n/**\n * 切换全局的 intl 的设置\n * @param locale 语言的 key\n */\nconst setIntl = (locale: string) => {\n  gIntl = getIntl(locale, true);\n};\n\n/**\n * 获取当前选择的语言\n * @returns string\n */\nexport function getLocale() {\n  return currentLocalName;\n}\n\n/**\n * 切换语言\n * @param lang 语言的 key\n * @returns string\n */\nexport const setLocale = (lang: string) => {\n  // if (getStorageLocale() !== lang) {\n  if (typeof window.localStorage !== \"undefined\") {\n    window.localStorage.setItem(\"why__locale\", lang || \"\");\n  }\n  window.location.reload();\n  // }\n};\n\ninterface MessageDescriptor {\n  id?: string;\n  description?: string | any;\n  defaultMessage?: string;\n}\n\n/**\n * 语言转换\n * @param descriptor\n * @param values\n */\nexport const formatMessage = (\n  descriptor: MessageDescriptor,\n  values?: Record<string, any>\n) => {\n  if (!gIntl) {\n    setIntl(getLocale());\n  }\n  return gIntl.formatMessage(descriptor, values);\n};\n\n/**\n * 获取当前使用的语言信息\n * @returns\n */\nexport const getLocaleInfo = () => {\n  return currentLocaleInfo;\n};\n\nexport { createIntl };\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\index.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\components\\PopoverMenu\\PopoverMenu.tsx",["202","203","204","205"],"import React from \"react\";\nimport { Popover } from \"antd\";\nimport { useActivate, useUnactivate } from \"react-activation\";\nimport classNames from \"classnames\";\nimport { PopoverProps } from \"antd/es/popover\";\nimport styles from \"./PopoverMenu.module.less\";\n\nexport interface PopoverMenuProps\n  extends Omit<PopoverProps, \"overlayClassName\" | \"overlay\"> {\n  zIndex?: number;\n  content: React.ReactNode;\n}\n\n/**\n * 具有选项条的 Popover\n */\nfunction PopoverMenu({ zIndex, content, ...props }: PopoverMenuProps) {\n  const [canRender, setCanRender] = React.useState(true);\n\n  useActivate(() => {\n    setCanRender(true);\n  });\n\n  useUnactivate(() => {\n    setCanRender(false);\n  });\n\n  if (!canRender) {\n    return null;\n  }\n\n  return (\n    <Popover\n      getPopupContainer={(triggerNode) => triggerNode.parentNode as HTMLElement}\n      overlayClassName={styles.menuContent}\n      overlayStyle={{ zIndex }}\n      {...props}\n      content={<ul className={styles.menuList}>{content}</ul>}\n    />\n  );\n}\n\nexport interface PopoverMenuItemProps extends React.LiHTMLAttributes<any> {\n  disabled?: boolean;\n  children?: React.ReactNode;\n}\n\n/**\n * PopoverMenu 单条\n */\nexport function PopoverMenuItem({\n  disabled,\n  title,\n  children,\n  className,\n  ...props\n}: PopoverMenuItemProps) {\n  return (\n    <li\n      className={classNames(\n        styles.menuItem,\n        { [styles.disabled]: disabled },\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </li>\n  );\n}\n\nexport default PopoverMenu;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\components\\Spinner\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\config.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\hooks\\useDebounce.tsx",["206","207","208"],"import { useState, useEffect } from \"react\";\n\nfunction useDebounce(value: any, delay = 300) {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = window.setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n  return debouncedValue;\n}\nexport default useDebounce;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\main.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\auth\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\customHooks\\index.tsx",["209","210","211"],"import Icon from \"../../components/Icon\";\nimport React, { useState } from \"react\";\nimport styles from \"./index.module.less\";\n\nconst CustomPage: React.FC = ({ children }) => {\n  return (\n    <div>\n      我是自定义hooks\n      <Icon style={{ color: \"red\", fontSize: \"20px\" }} type=\"icon-fanhui\" />\n    </div>\n  );\n};\n\nexport default CustomPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\doc\\index.tsx",["212","213"],"import React, { useState } from \"react\";\nimport styles from \"./index.module.less\";\nimport { Tooltip } from \"antd\";\n\nconst DocPage: React.FC = ({ children }) => {\n  return (\n    <Tooltip placement=\"top\" color={\"red\"} title={\"谢谢你的关注，你很眼光\"}>\n      <div className={styles.doc}>\n        <div>掘金</div>\n        <div>github</div>\n        <div>公众号</div>\n      </div>\n    </Tooltip>\n  );\n};\n\nexport default DocPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\home\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\icon\\index.tsx",["214","215"],"import Icon from \"../../components/Icon\";\nimport React, { useState } from \"react\";\nimport styles from \"./index.module.less\";\nimport IconSelect from \"../../components/IconSelect\";\n\nconst IconPage: React.FC = ({ children }) => {\n  return (\n    <div>\n      <div className={styles.iconHeader}>antd 配合iconfont 使用</div>\n      <div className={styles.iconBody}>\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-English\" size={\"large\"} />\n          <span>English</span>\n        </div>\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-Chinese\" size={\"large\"} />\n          <span>Chinese</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-check\" size={\"large\"} />\n          <span>check</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-close\" size={\"large\"} />\n          <span>close</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-reload\" size={\"large\"} />\n          <span>reload</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-menu\" size={\"large\"} />\n          <span>menu</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-table\" size={\"large\"} />\n          <span>table</span>\n        </div>\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-folder\" size={\"large\"} />\n          <span>folder</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-message\" size={\"large\"} />\n          <span>message</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-copy\" size={\"large\"} />\n          <span>copy</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-user-space\" size={\"large\"} />\n          <span>user-space</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-number\" size={\"large\"} />\n          <span>number</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-circle\" size={\"large\"} />\n          <span>circle</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-publish\" size={\"large\"} />\n          <span>publish</span>\n        </div>\n\n        <div className={styles.iconItem}>\n          <Icon type=\"icon-empty\" size={\"large\"} />\n          <span>empty</span>\n        </div>\n      </div>\n      <div>\n        <IconSelect />\n      </div>\n    </div>\n  );\n};\n\nexport default IconPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\locales\\index.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\CountDown.tsx",["216","217","218","219","220"],"import React, { useState } from \"react\";\nimport { Button, Col, Form, Input, notification, Row, message } from \"antd\";\nimport classNames from \"classnames\";\nimport { FormInstance } from \"antd/es/form\";\nimport messageStyles from \"./LoginMessage.module.less\";\nimport styles from \"../index.module.less\";\nimport { formatMessage } from \"../../../components/locales\";\nimport { useInterval } from \"ahooks\";\n\ninterface ICountDownParams {\n  type: \"LOGIN\" | \"REG\" | \"PWD\"; // 类型（登录LOGIN/注册REG/找回密码PWD）\n  form: FormInstance;\n  invitation?: boolean; // 是否有邀请码，默认没有\n}\n\nconst CountDown: React.FC<ICountDownParams> = ({\n  type,\n  form,\n  invitation = false,\n}) => {\n  const prefixSpan = (\n    <Form.Item name=\"prefix\" noStyle>\n      <span>+86</span>\n    </Form.Item>\n  );\n\n  // 验证码描述\n  const [des, setDes] = useState(\"获取验证码\");\n  // 控制按钮是否可以点击\n  const [click, setClick] = useState(true);\n\n  /**\n   * 倒计时\n   */\n  const [count, setCount] = useState(60);\n  const [delay, setDelay] = useState<number | null>(null);\n  useInterval(() => {\n    setCount(count - 1);\n    setDes(`${\"重置\"}(${count} s)`);\n    if (count <= 0) {\n      setCount(60);\n      setDes(\"获取验证码\");\n      setDelay(null);\n      setClick(true);\n    }\n  }, delay);\n\n  /**\n   * 发送验证码\n   */\n  function sendCode() {\n    form\n      .validateFields([\"phone\", \"invitation_code\"])\n      .then((data: { [name: string]: any }) => {\n        setDes(formatMessage({ id: \"sending\" }));\n        setClick(false);\n        // getCode({\n        //   phone: data.phone,\n        //   invitation_code: data.invitation_code,\n        //   type,\n        // })\n        //   .then((res) => {\n        //     // 0: 错误  1： 正确\n        //     if (res.success === \"1\") {\n        //       setDelay(1000);\n        //       message.success(formatMessage({ id: \"SMSSend\" }));\n        //     } else {\n        //       setDes(formatMessage({ id: \"getCaptcha\" }));\n        //       setDelay(null);\n        //       setClick(true);\n        //       notification.error({\n        //         message: formatMessage({ id: res.msg }),\n        //       });\n        //     }\n        //   })\n        //   .catch(() => {\n        //     setDelay(null);\n        //   });\n      });\n  }\n\n  return (\n    <>\n      <Form.Item\n        name=\"phone\"\n        rules={[\n          {\n            required: true,\n            message: formatMessage({ id: \"PhoneEmpty\" }),\n          },\n          {\n            message: formatMessage({ id: \"inputPhone\" }),\n            pattern: /^1[3456789]\\d{9}$/,\n          },\n        ]}\n      >\n        <Input\n          className={classNames(styles.noLeftBorder, styles.phoneInput)}\n          placeholder={formatMessage({ id: \"Phone\" })}\n          addonBefore={prefixSpan}\n          style={{ width: \"100%\" }}\n          size=\"large\"\n        />\n      </Form.Item>\n      {invitation ? (\n        <Form.Item\n          name=\"invitation_code\"\n          rules={[\n            {\n              required: true,\n              message: formatMessage({ id: \"invitationCodeNull\" }),\n            },\n          ]}\n        >\n          <Input\n            className={styles.input}\n            placeholder={formatMessage({ id: \"invitationCodeS\" })}\n            maxLength={6}\n            size=\"large\"\n          />\n        </Form.Item>\n      ) : (\n        \"\"\n      )}\n      <Form.Item\n        name=\"check_code\"\n        rules={[\n          { required: true, message: formatMessage({ id: \"messageNull\" }) },\n        ]}\n      >\n        <Row gutter={6}>\n          <Col className=\"gutter-row\" span={14}>\n            <Input\n              className={messageStyles.input}\n              placeholder={formatMessage({ id: \"messageNumber\" })}\n              maxLength={128}\n              size=\"large\"\n            />\n          </Col>\n          <Col className=\"gutter-row\" span={10}>\n            <Button\n              className={messageStyles.button}\n              disabled={!click}\n              block\n              onClick={sendCode}\n            >\n              {des}\n            </Button>\n          </Col>\n        </Row>\n      </Form.Item>\n    </>\n  );\n};\n\nexport default CountDown;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginContent.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginMessage.tsx",["221","222"],"import React from \"react\";\nimport { Form, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport CountDown from \"./CountDown\";\nimport styles from \"../index.module.less\";\nimport { formatMessage } from \"../../../components/locales\";\n\n/**\n * 验证码登录\n */\n\nexport interface ILoginParams {\n  updateWay: (name: string) => void;\n}\n\nconst LoginMessage: React.FC<ILoginParams> = ({ updateWay }) => {\n  const [form] = Form.useForm();\n  function handleFinish(data: { [name: string]: any }) {\n    // 避免接口报错后无法正常登录的问题\n  }\n\n  /**\n   * 切换登录方式\n   */\n  function handleClick() {\n    updateWay(\"pwd\");\n  }\n\n  /**\n   * 手机号前面的区号，目前写死，暂时不用\n   */\n  // const prefixSelector = (\n  //   <Form.Item name=\"prefix\" noStyle>\n  //     <Select className={styles.phoneSelect} style={{ width: 70 }} bordered={false}>\n  //       <Option value=\"86\">+86</Option>\n  //     </Select>\n  //   </Form.Item>\n  // );\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.header}>\n        <div className={styles.loginTitle}>\n          {formatMessage({ id: \"loginBtn\" })}\n        </div>\n        <div\n          onClick={handleClick}\n          className={styles.changeWay}\n          style={{ width: 136, textAlign: \"right\" }}\n        >\n          {formatMessage({ id: \"passwordLogin\" })}\n        </div>\n      </div>\n      <Form form={form} onFinish={handleFinish}>\n        <CountDown form={form} type=\"LOGIN\" />\n        <Button\n          className={styles.loginButton}\n          type=\"primary\"\n          htmlType=\"submit\"\n          loading={false}\n          size=\"large\"\n          block\n        >\n          {formatMessage({ id: \"LogIn\" })}\n        </Button>\n        <div className={styles.register}>\n          <Link to=\"/register\">\n            {formatMessage({ id: \"registeredAccount\" })}\n          </Link>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginMessage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\components\\LoginPassword.tsx",["223","224"],"import React from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { loginApp } from \"../../../services/login\";\nimport styles from \"../index.module.less\";\nimport { ILoginParams } from \"./LoginMessage\";\n\n/**\n * 密码登录\n *\n */\nconst LoginPassword: React.FC<ILoginParams> = ({ updateWay }) => {\n  const history = useHistory();\n\n  function handleFinish(data: { [name: string]: any }) {\n    loginApp({ userName: \"why\", pwd: \"123\" }).then((res) => {\n      if (res.code === 200) {\n        sessionStorage.setItem(\"token\", \"我有权限了\");\n        history.push(\"/home\");\n      } else {\n        message.error(\"用户名或密码错误！\");\n      }\n    });\n  }\n\n  function handleClick() {\n    updateWay(\"message\");\n  }\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.header}>\n        <div className={styles.loginTitle}>登陆</div>\n        <div\n          onClick={handleClick}\n          className={styles.changeWay}\n          style={{ width: 99, textAlign: \"right\" }}\n        >\n          验证码登陆\n        </div>\n      </div>\n      <Form onFinish={handleFinish}>\n        <Form.Item\n          name=\"user_info\"\n          rules={[{ required: true, message: \"用户名/手机号/邮箱不能为空\" }]}\n        >\n          <Input\n            className={styles.input}\n            placeholder={\"用户名/手机号/邮箱\"}\n            maxLength={128}\n            size=\"large\"\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"user_check\"\n          rules={[{ required: true, message: \"密码不能为空\" }]}\n        >\n          <Input\n            className={styles.input}\n            type=\"password\"\n            placeholder=\"密码\"\n            maxLength={128}\n            size=\"large\"\n          />\n        </Form.Item>\n        <div className={styles.toolBox}>\n          <Link\n            to=\"/forget-password\"\n            style={{ width: 105, textAlign: \"right\" }}\n          >\n            忘记密码\n          </Link>\n        </div>\n        <Button\n          className={styles.loginButton}\n          type=\"primary\"\n          htmlType=\"submit\"\n          size=\"large\"\n          block\n        >\n          登陆\n        </Button>\n        <div className={styles.register}>\n          <Link to=\"/register\">注册</Link>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nexport default LoginPassword;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\login\\index.tsx",["225","226"],"import React from \"react\";\nimport { useLocalStorageState } from \"ahooks\";\nimport LoginPassword from \"./components/LoginPassword\";\nimport LoginMessage from \"./components/LoginMessage\";\nimport styles from \"./index.module.less\";\n\nconst LoginPage: React.FC = () => {\n  const [loginWay, setLoginWay] = useLocalStorageState(\"login__Login__way\", \"\");\n  const [way, setWay] = React.useState<string>(loginWay);\n\n  /**\n   * 更新登录方式\n   * @param name\n   */\n  function updateWay(name: string) {\n    setWay(name);\n    setLoginWay(name);\n  }\n\n  return (\n    <div className={styles.loginContainer}>\n      <div className={styles.loginLogo} />\n      <div className={styles.loginForm}>\n        {/*{way === \"message\" ? (*/}\n        {/*  <LoginMessage updateWay={updateWay} />*/}\n        {/*) : (*/}\n        <LoginPassword updateWay={updateWay} />\n        {/*)}*/}\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\publicComponents\\index.tsx",["227","228","229"],"import React, { useState } from \"react\";\nimport styles from \"./index.module.less\";\n\nconst PublicPage: React.FC = ({ children }) => {\n  return <div>我是公共组件</div>;\n};\n\nexport default PublicPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\drag.tsx",["230","231","232","233","234","235","236","237","238"],"import React, { useState } from \"react\";\nimport { Table } from \"antd\";\nimport {\n  SortableContainer,\n  SortableElement,\n  SortableHandle,\n} from \"react-sortable-hoc\";\nimport { MenuOutlined } from \"@ant-design/icons\";\nimport { arrayMoveImmutable } from \"array-move\";\nimport { ColumnsType } from \"antd/lib/table\";\n\nconst DragHandle = SortableHandle(() => {\n  return <MenuOutlined style={{ cursor: \"grab\", color: \"#999\" }} />;\n});\nconst SortableItem = SortableElement((props: React.AllHTMLAttributes<any>) => (\n  <tr {...props} />\n));\nconst SortableContainers = SortableContainer(\n  (props: React.AllHTMLAttributes<any>) => {\n    return <tbody {...props} />;\n  }\n);\nconst columns: ColumnsType<any> = [\n  {\n    title: \"Sort\",\n    dataIndex: \"sort\",\n    width: 30,\n    className: \"drag-visible\",\n    render: () => {\n      return <DragHandle />;\n    },\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    className: \"drag-visible\",\n  },\n  {\n    title: \"Age\",\n    dataIndex: \"age\",\n  },\n  {\n    title: \"Address\",\n    dataIndex: \"address\",\n  },\n];\nconst data = [\n  {\n    key: \"1\",\n    name: \"John Brown\",\n    age: 32,\n    address: \"New York No. 1 Lake Park\",\n    index: 0,\n  },\n  {\n    key: \"2\",\n    name: \"Jim Green\",\n    age: 42,\n    address: \"London No. 1 Lake Park\",\n    index: 1,\n  },\n  {\n    key: \"3\",\n    name: \"Joe Black\",\n    age: 32,\n    address: \"Sidney No. 1 Lake Park\",\n    index: 2,\n  },\n];\n\nconst TableDrag: React.FC = () => {\n  const [dataSource, setDataSource] = useState<any>(data);\n  const onSortEnd = ({\n    oldIndex,\n    newIndex,\n  }: {\n    oldIndex: number;\n    newIndex: number;\n  }) => {\n    if (oldIndex !== newIndex) {\n      const newData = arrayMoveImmutable(\n        [].concat(dataSource),\n        oldIndex,\n        newIndex\n      ).filter((el) => !!el);\n      setDataSource(newData);\n    }\n  };\n\n  const DraggableContainer = (props: React.AllHTMLAttributes<any>) => {\n    return (\n      <SortableContainers\n        useDragHandle\n        disableAutoscroll\n        helperClass=\"row-dragging\"\n        onSortEnd={onSortEnd}\n        {...props}\n      />\n    );\n  };\n\n  const DraggableBodyRow = ({ className, style, ...restProps }: any) => {\n    // function findIndex base on Table rowKey props and should always be a right array index\n    const index = dataSource.findIndex(\n      (x: any) => x.index === restProps[\"data-row-key\"]\n    );\n    return <SortableItem index={index} {...restProps} />;\n  };\n  return (\n    <Table\n      pagination={false}\n      dataSource={dataSource}\n      columns={columns}\n      rowKey=\"index\"\n      components={{\n        body: {\n          wrapper: DraggableContainer,\n          row: DraggableBodyRow,\n        },\n      }}\n    />\n  );\n};\nexport default TableDrag;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\edit.tsx",["239"],"import React from \"react\";\nimport { Button, Col, Form, Input, Row, Table, Select } from \"antd\";\nimport { useAntdTable } from \"ahooks\";\nimport { PaginatedParams } from \"ahooks/lib/useAntdTable\";\n\nconst { Option } = Select;\n\ninterface Item {\n  name: {\n    last: string;\n  };\n  email: string;\n  phone: string;\n  gender: \"male\" | \"female\";\n}\n\ninterface Result {\n  total: number;\n  list: Item[];\n}\n\nconst getTableData = (\n  { current, pageSize }: PaginatedParams[0],\n  formData: Record<string, any>\n): Promise<Result> => {\n  let query = `page=${current}&size=${pageSize}`;\n  Object.entries(formData).forEach(([key, value]) => {\n    if (value) {\n      query += `&${key}=${value}`;\n    }\n  });\n\n  return fetch(`https://randomuser.me/api?results=55&${query}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nconst TableEdit: React.FC = () => {\n  const [form] = Form.useForm();\n\n  const { tableProps, search } = useAntdTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n  });\n\n  const { type, changeType, submit, reset } = search;\n\n  const columns = [\n    {\n      title: \"姓名\",\n      dataIndex: [\"name\", \"last\"],\n    },\n    {\n      title: \"邮箱\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"电话\",\n      dataIndex: \"phone\",\n    },\n    {\n      title: \"性别\",\n      dataIndex: \"gender\",\n    },\n  ];\n\n  const advanceSearchForm = (\n    <div>\n      <Form form={form}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item label=\"姓名\" name=\"name\">\n              <Input placeholder=\"姓名\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"邮箱\" name=\"email\">\n              <Input placeholder=\"邮箱\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"电话\" name=\"phone\">\n              <Input placeholder=\"电话\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button type=\"primary\" onClick={submit}>\n              查询\n            </Button>\n            <Button onClick={reset} style={{ marginLeft: 16 }}>\n              重置\n            </Button>\n            <Button type=\"link\" onClick={changeType}>\n              基础查询\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n\n  const searchForm = (\n    <div style={{ marginBottom: 16 }}>\n      <Form form={form} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Form.Item name=\"gender\">\n          <Select style={{ width: 120, marginRight: 16 }} onChange={submit}>\n            <Option value=\"\">全部</Option>\n            <Option value=\"male\">男性</Option>\n            <Option value=\"female\">女性</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"name\">\n          <Input.Search\n            placeholder=\"输入姓名\"\n            style={{ width: 240 }}\n            onSearch={submit}\n          />\n        </Form.Item>\n        <Button type=\"link\" onClick={changeType}>\n          高级查询\n        </Button>\n      </Form>\n    </div>\n  );\n\n  return (\n    <div>\n      {type === \"simple\" ? searchForm : advanceSearchForm}\n      <Table columns={columns} rowKey=\"email\" {...tableProps} />\n    </div>\n  );\n};\n\nexport default TableEdit;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\pages\\table\\index.tsx",["240","241"],"import React from \"react\";\nimport { Button, Col, Form, Input, Row, Table, Select } from \"antd\";\nimport { useAntdTable } from \"ahooks\";\nimport { PaginatedParams } from \"ahooks/lib/useAntdTable\";\nimport { ColumnsType } from \"antd/lib/table\";\n\nconst { Option } = Select;\n\ninterface Item {\n  name: {\n    last: string;\n  };\n  email: string;\n  phone: string;\n  gender: \"male\" | \"female\";\n}\n\ninterface Result {\n  total: number;\n  list: Item[];\n}\n\nconst getTableData = (\n  { current, pageSize }: PaginatedParams[0],\n  formData: Record<string, any>\n): Promise<Result> => {\n  let query = `page=${current}&size=${pageSize}`;\n  Object.entries(formData).forEach(([key, value]) => {\n    if (value) {\n      query += `&${key}=${value}`;\n    }\n  });\n\n  return fetch(`https://randomuser.me/api?results=55&${query}`)\n    .then((res) => res.json())\n    .then((res) => ({\n      total: res.info.results,\n      list: res.results,\n    }));\n};\n\nconst TableList: React.FC = () => {\n  const [form] = Form.useForm();\n\n  const { tableProps, search } = useAntdTable(getTableData, {\n    defaultPageSize: 5,\n    form,\n  });\n\n  const { type, changeType, submit, reset } = search;\n\n  const columns: ColumnsType<any> = [\n    {\n      title: \"姓名\",\n      dataIndex: [\"name\", \"last\"],\n    },\n    {\n      title: \"邮箱\",\n      dataIndex: \"email\",\n    },\n    {\n      title: \"电话\",\n      dataIndex: \"phone\",\n    },\n    {\n      title: \"性别\",\n      dataIndex: \"gender\",\n    },\n  ];\n\n  const advanceSearchForm = (\n    <div>\n      <Form form={form}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <Form.Item label=\"姓名\" name=\"name\">\n              <Input placeholder=\"姓名\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"邮箱\" name=\"email\">\n              <Input placeholder=\"邮箱\" />\n            </Form.Item>\n          </Col>\n          <Col span={8}>\n            <Form.Item label=\"电话\" name=\"phone\">\n              <Input placeholder=\"电话\" />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Row>\n          <Form.Item style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n            <Button type=\"primary\" onClick={submit}>\n              查询\n            </Button>\n            <Button onClick={reset} style={{ marginLeft: 16 }}>\n              重置\n            </Button>\n            <Button type=\"link\" onClick={changeType}>\n              基础查询\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n    </div>\n  );\n\n  const searchForm = (\n    <div style={{ marginBottom: 16 }}>\n      <Form form={form} style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\n        <Form.Item name=\"gender\">\n          <Select style={{ width: 120, marginRight: 16 }} onChange={submit}>\n            <Option value=\"\">全部</Option>\n            <Option value=\"male\">男性</Option>\n            <Option value=\"female\">女性</Option>\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"name\">\n          <Input.Search\n            placeholder=\"输入姓名\"\n            style={{ width: 240 }}\n            onSearch={submit}\n          />\n        </Form.Item>\n        <Button type=\"link\" onClick={changeType}>\n          高级查询\n        </Button>\n      </Form>\n    </div>\n  );\n\n  return (\n    <div>\n      {type === \"simple\" ? searchForm : advanceSearchForm}\n      <Table columns={columns} rowKey=\"email\" {...tableProps} />\n    </div>\n  );\n};\n\nexport default TableList;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\privateRouter.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\router\\components\\routerConfig.tsx",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\router\\index.tsx",["242"],"import React from \"react\";\nimport { HashRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"@/pages/home\";\nimport LoginPage from \"@/pages/login\";\nimport DocPage from \"@/pages/doc\";\nimport PublicPage from \"@/pages/publicComponents\";\nimport CustomPage from \"@/pages/customHooks\";\nimport LocalePage from \"@/pages/locales\";\nimport IconPage from \"@/pages/icon\";\nimport TableList from \"@/pages/table\";\nimport TableEdit from \"@/pages/table/edit\";\nimport TableDrag from \"@/pages/table/drag\";\nimport PrivateRoute from \"./components/privateRouter\";\nimport AuthPage from \"@/pages/auth\";\n\nconst RouterPage = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path={\"/login\"} component={LoginPage} />\n        <Route\n          path=\"/\"\n          render={() => (\n            <HomePage>\n              <Switch>\n                <PrivateRoute path=\"/doc\" component={DocPage} />\n                <PrivateRoute path=\"/home\" component={PublicPage} />\n                <PrivateRoute path=\"/custom\" component={CustomPage} />\n                <PrivateRoute path=\"/locale\" component={LocalePage} />\n                <PrivateRoute path=\"/icon\" component={IconPage} />\n                <PrivateRoute path=\"/table/base\" component={TableList} />\n                <PrivateRoute path=\"/table/edit\" component={TableEdit} />\n                <PrivateRoute path=\"/table/drag\" component={TableDrag} />\n                <PrivateRoute path=\"/auth\" component={AuthPage} />\n                <Redirect to=\"/home\" />\n              </Switch>\n            </HomePage>\n          )}\n        />\n      </Switch>\n    </HashRouter>\n  );\n};\nexport default RouterPage;\n","D:\\mywork\\vite-react-template-typescript-master\\src\\services\\login.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\utils\\reuqest.ts",[],"D:\\mywork\\vite-react-template-typescript-master\\src\\vite-env.d.ts",[],{"ruleId":"243","severity":1,"message":"244","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"248","line":12,"column":1,"nodeType":"249","messageId":"250","endLine":12,"endColumn":15},{"ruleId":"243","severity":1,"message":"251","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"248","line":32,"column":3,"nodeType":"252","messageId":"250","endLine":32,"endColumn":22},{"ruleId":"247","severity":1,"message":"248","line":36,"column":27,"nodeType":"253","messageId":"250","endLine":39,"endColumn":7},{"ruleId":"247","severity":1,"message":"248","line":48,"column":3,"nodeType":"252","messageId":"250","endLine":48,"endColumn":54},{"ruleId":"254","severity":1,"message":"255","line":74,"column":22,"nodeType":"256","messageId":"257","endLine":74,"endColumn":25,"suggestions":"258"},{"ruleId":"254","severity":1,"message":"255","line":77,"column":22,"nodeType":"256","messageId":"257","endLine":77,"endColumn":25,"suggestions":"259"},{"ruleId":"247","severity":1,"message":"248","line":82,"column":3,"nodeType":"252","messageId":"250","endLine":82,"endColumn":11},{"ruleId":"243","severity":1,"message":"260","line":84,"column":13,"nodeType":"245","messageId":"246","endLine":84,"endColumn":15},{"ruleId":"243","severity":1,"message":"261","line":84,"column":17,"nodeType":"245","messageId":"246","endLine":84,"endColumn":22},{"ruleId":"243","severity":1,"message":"262","line":84,"column":24,"nodeType":"245","messageId":"246","endLine":84,"endColumn":31},{"ruleId":"254","severity":1,"message":"255","line":6,"column":56,"nodeType":"256","messageId":"257","endLine":6,"endColumn":59,"suggestions":"263"},{"ruleId":"254","severity":1,"message":"255","line":17,"column":22,"nodeType":"256","messageId":"257","endLine":17,"endColumn":25,"suggestions":"264"},{"ruleId":"254","severity":1,"message":"255","line":19,"column":31,"nodeType":"256","messageId":"257","endLine":19,"endColumn":34,"suggestions":"265"},{"ruleId":"247","severity":1,"message":"248","line":25,"column":1,"nodeType":"249","messageId":"250","endLine":31,"endColumn":20},{"ruleId":"254","severity":1,"message":"255","line":25,"column":41,"nodeType":"256","messageId":"257","endLine":25,"endColumn":44,"suggestions":"266"},{"ruleId":"243","severity":1,"message":"267","line":46,"column":10,"nodeType":"245","messageId":"246","endLine":46,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":106,"column":8,"nodeType":"249","messageId":"250","endLine":106,"endColumn":28},{"ruleId":"247","severity":1,"message":"248","line":115,"column":26,"nodeType":"253","messageId":"250","endLine":115,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":126,"column":26,"nodeType":"256","messageId":"257","endLine":126,"endColumn":29,"suggestions":"268"},{"ruleId":"247","severity":1,"message":"248","line":135,"column":30,"nodeType":"253","messageId":"250","endLine":138,"endColumn":5},{"ruleId":"254","severity":1,"message":"255","line":137,"column":27,"nodeType":"256","messageId":"257","endLine":137,"endColumn":30,"suggestions":"269"},{"ruleId":"247","severity":1,"message":"248","line":149,"column":30,"nodeType":"253","messageId":"250","endLine":149,"endColumn":35},{"ruleId":"247","severity":1,"message":"248","line":17,"column":1,"nodeType":"249","messageId":"250","endLine":17,"endColumn":70},{"ruleId":"254","severity":1,"message":"255","line":43,"column":70,"nodeType":"256","messageId":"257","endLine":43,"endColumn":73,"suggestions":"270"},{"ruleId":"247","severity":1,"message":"248","line":51,"column":8,"nodeType":"249","messageId":"250","endLine":57,"endColumn":25},{"ruleId":"243","severity":1,"message":"271","line":53,"column":3,"nodeType":"245","messageId":"246","endLine":53,"endColumn":8},{"ruleId":"247","severity":1,"message":"248","line":3,"column":1,"nodeType":"249","messageId":"250","endLine":3,"endColumn":46},{"ruleId":"247","severity":1,"message":"272","line":3,"column":22,"nodeType":"245","messageId":"273","endLine":3,"endColumn":32},{"ruleId":"254","severity":1,"message":"255","line":3,"column":29,"nodeType":"256","messageId":"257","endLine":3,"endColumn":32,"suggestions":"274"},{"ruleId":"243","severity":1,"message":"244","line":2,"column":17,"nodeType":"245","messageId":"246","endLine":2,"endColumn":25},{"ruleId":"243","severity":1,"message":"275","line":3,"column":8,"nodeType":"245","messageId":"246","endLine":3,"endColumn":14},{"ruleId":"243","severity":1,"message":"276","line":5,"column":33,"nodeType":"245","messageId":"246","endLine":5,"endColumn":41},{"ruleId":"243","severity":1,"message":"244","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"276","line":5,"column":30,"nodeType":"245","messageId":"246","endLine":5,"endColumn":38},{"ruleId":"243","severity":1,"message":"244","line":2,"column":17,"nodeType":"245","messageId":"246","endLine":2,"endColumn":25},{"ruleId":"243","severity":1,"message":"276","line":6,"column":31,"nodeType":"245","messageId":"246","endLine":6,"endColumn":39},{"ruleId":"243","severity":1,"message":"277","line":2,"column":36,"nodeType":"245","messageId":"246","endLine":2,"endColumn":48},{"ruleId":"243","severity":1,"message":"278","line":2,"column":55,"nodeType":"245","messageId":"246","endLine":2,"endColumn":62},{"ruleId":"243","severity":1,"message":"279","line":17,"column":3,"nodeType":"245","messageId":"246","endLine":17,"endColumn":7},{"ruleId":"243","severity":1,"message":"280","line":54,"column":14,"nodeType":"245","messageId":"246","endLine":54,"endColumn":43},{"ruleId":"254","severity":1,"message":"255","line":54,"column":38,"nodeType":"256","messageId":"257","endLine":54,"endColumn":41,"suggestions":"281"},{"ruleId":"243","severity":1,"message":"280","line":18,"column":25,"nodeType":"245","messageId":"246","endLine":18,"endColumn":54},{"ruleId":"254","severity":1,"message":"255","line":18,"column":49,"nodeType":"256","messageId":"257","endLine":18,"endColumn":52,"suggestions":"282"},{"ruleId":"243","severity":1,"message":"280","line":15,"column":25,"nodeType":"245","messageId":"246","endLine":15,"endColumn":54},{"ruleId":"254","severity":1,"message":"255","line":15,"column":49,"nodeType":"256","messageId":"257","endLine":15,"endColumn":52,"suggestions":"283"},{"ruleId":"243","severity":1,"message":"284","line":4,"column":8,"nodeType":"245","messageId":"246","endLine":4,"endColumn":20},{"ruleId":"243","severity":1,"message":"285","line":9,"column":10,"nodeType":"245","messageId":"246","endLine":9,"endColumn":13},{"ruleId":"243","severity":1,"message":"244","line":1,"column":17,"nodeType":"245","messageId":"246","endLine":1,"endColumn":25},{"ruleId":"243","severity":1,"message":"275","line":2,"column":8,"nodeType":"245","messageId":"246","endLine":2,"endColumn":14},{"ruleId":"243","severity":1,"message":"276","line":4,"column":33,"nodeType":"245","messageId":"246","endLine":4,"endColumn":41},{"ruleId":"254","severity":1,"message":"255","line":15,"column":70,"nodeType":"256","messageId":"257","endLine":15,"endColumn":73,"suggestions":"286"},{"ruleId":"254","severity":1,"message":"255","line":19,"column":35,"nodeType":"256","messageId":"257","endLine":19,"endColumn":38,"suggestions":"287"},{"ruleId":"254","severity":1,"message":"255","line":23,"column":28,"nodeType":"256","messageId":"257","endLine":23,"endColumn":31,"suggestions":"288"},{"ruleId":"254","severity":1,"message":"255","line":72,"column":48,"nodeType":"256","messageId":"257","endLine":72,"endColumn":51,"suggestions":"289"},{"ruleId":"254","severity":1,"message":"255","line":90,"column":62,"nodeType":"256","messageId":"257","endLine":90,"endColumn":65,"suggestions":"290"},{"ruleId":"243","severity":1,"message":"291","line":102,"column":31,"nodeType":"245","messageId":"246","endLine":102,"endColumn":40},{"ruleId":"243","severity":1,"message":"292","line":102,"column":42,"nodeType":"245","messageId":"246","endLine":102,"endColumn":47},{"ruleId":"254","severity":1,"message":"255","line":102,"column":65,"nodeType":"256","messageId":"257","endLine":102,"endColumn":68,"suggestions":"293"},{"ruleId":"254","severity":1,"message":"255","line":105,"column":11,"nodeType":"256","messageId":"257","endLine":105,"endColumn":14,"suggestions":"294"},{"ruleId":"254","severity":1,"message":"255","line":24,"column":28,"nodeType":"256","messageId":"257","endLine":24,"endColumn":31,"suggestions":"295"},{"ruleId":"254","severity":1,"message":"255","line":25,"column":28,"nodeType":"256","messageId":"257","endLine":25,"endColumn":31,"suggestions":"296"},{"ruleId":"254","severity":1,"message":"255","line":52,"column":30,"nodeType":"256","messageId":"257","endLine":52,"endColumn":33,"suggestions":"297"},{"ruleId":"247","severity":1,"message":"248","line":17,"column":20,"nodeType":"253","messageId":"250","endLine":17,"endColumn":25},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","FunctionDeclaration","missingReturnType","'useEffect' is defined but never used.","FunctionExpression","ArrowFunctionExpression","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["298","299"],["300","301"],"'ok' is assigned a value but never used.","'error' is assigned a value but never used.","'promise' is assigned a value but never used.",["302","303"],["304","305"],["306","307"],["308","309"],"'setDefaultLanguage' is defined but never used.",["310","311"],["312","313"],["314","315"],"'title' is defined but never used.","Argument 'value' should be typed with a non-any type.","anyTypedArg",["316","317"],"'styles' is defined but never used.","'children' is defined but never used.","'notification' is defined but never used.","'message' is defined but never used.","'type' is defined but never used.","'data' is defined but never used.",["318","319"],["320","321"],["322","323"],"'LoginMessage' is defined but never used.","'way' is assigned a value but never used.",["324","325"],["326","327"],["328","329"],["330","331"],["332","333"],"'className' is defined but never used.","'style' is defined but never used.",["334","335"],["336","337"],["338","339"],["340","341"],["342","343"],{"messageId":"344","fix":"345","desc":"346"},{"messageId":"347","fix":"348","desc":"349"},{"messageId":"344","fix":"350","desc":"346"},{"messageId":"347","fix":"351","desc":"349"},{"messageId":"344","fix":"352","desc":"346"},{"messageId":"347","fix":"353","desc":"349"},{"messageId":"344","fix":"354","desc":"346"},{"messageId":"347","fix":"355","desc":"349"},{"messageId":"344","fix":"356","desc":"346"},{"messageId":"347","fix":"357","desc":"349"},{"messageId":"344","fix":"358","desc":"346"},{"messageId":"347","fix":"359","desc":"349"},{"messageId":"344","fix":"360","desc":"346"},{"messageId":"347","fix":"361","desc":"349"},{"messageId":"344","fix":"362","desc":"346"},{"messageId":"347","fix":"363","desc":"349"},{"messageId":"344","fix":"364","desc":"346"},{"messageId":"347","fix":"365","desc":"349"},{"messageId":"344","fix":"366","desc":"346"},{"messageId":"347","fix":"367","desc":"349"},{"messageId":"344","fix":"368","desc":"346"},{"messageId":"347","fix":"369","desc":"349"},{"messageId":"344","fix":"370","desc":"346"},{"messageId":"347","fix":"371","desc":"349"},{"messageId":"344","fix":"372","desc":"346"},{"messageId":"347","fix":"373","desc":"349"},{"messageId":"344","fix":"374","desc":"346"},{"messageId":"347","fix":"375","desc":"349"},{"messageId":"344","fix":"376","desc":"346"},{"messageId":"347","fix":"377","desc":"349"},{"messageId":"344","fix":"378","desc":"346"},{"messageId":"347","fix":"379","desc":"349"},{"messageId":"344","fix":"380","desc":"346"},{"messageId":"347","fix":"381","desc":"349"},{"messageId":"344","fix":"382","desc":"346"},{"messageId":"347","fix":"383","desc":"349"},{"messageId":"344","fix":"384","desc":"346"},{"messageId":"347","fix":"385","desc":"349"},{"messageId":"344","fix":"386","desc":"346"},{"messageId":"347","fix":"387","desc":"349"},{"messageId":"344","fix":"388","desc":"346"},{"messageId":"347","fix":"389","desc":"349"},{"messageId":"344","fix":"390","desc":"346"},{"messageId":"347","fix":"391","desc":"349"},{"messageId":"344","fix":"392","desc":"346"},{"messageId":"347","fix":"393","desc":"349"},"suggestUnknown",{"range":"394","text":"395"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"394","text":"396"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"397","text":"395"},{"range":"397","text":"396"},{"range":"398","text":"395"},{"range":"398","text":"396"},{"range":"399","text":"395"},{"range":"399","text":"396"},{"range":"400","text":"395"},{"range":"400","text":"396"},{"range":"401","text":"395"},{"range":"401","text":"396"},{"range":"402","text":"395"},{"range":"402","text":"396"},{"range":"403","text":"395"},{"range":"403","text":"396"},{"range":"404","text":"395"},{"range":"404","text":"396"},{"range":"405","text":"395"},{"range":"405","text":"396"},{"range":"406","text":"395"},{"range":"406","text":"396"},{"range":"407","text":"395"},{"range":"407","text":"396"},{"range":"408","text":"395"},{"range":"408","text":"396"},{"range":"409","text":"395"},{"range":"409","text":"396"},{"range":"410","text":"395"},{"range":"410","text":"396"},{"range":"411","text":"395"},{"range":"411","text":"396"},{"range":"412","text":"395"},{"range":"412","text":"396"},{"range":"413","text":"395"},{"range":"413","text":"396"},{"range":"414","text":"395"},{"range":"414","text":"396"},{"range":"415","text":"395"},{"range":"415","text":"396"},{"range":"416","text":"395"},{"range":"416","text":"396"},{"range":"417","text":"395"},{"range":"417","text":"396"},{"range":"418","text":"395"},{"range":"418","text":"396"},[2018,2021],"unknown","never",[2116,2119],[219,222],[557,560],[611,614],[679,682],[2726,2729],[2905,2908],[1056,1059],[74,77],[1349,1352],[484,487],[443,446],[497,500],[612,615],[690,693],[1484,1487],[1882,1885],[2150,2153],[2304,2307],[489,492],[535,538],[1177,1180]]